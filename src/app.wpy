<style lang="less">
@import "./assets/style/weui.wxss";
@import "./assets/style/slds_icons_font.wxss";
page {
  background-color: #F2F2F2;
  font-size: 16px;
  font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'
import req from '@/network'
import * as interceptor from '@/network/interceptor'
import { baseUrl, appId } from '@/config'

import { serverAPI } from '@/server';

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/apps',
      'pages/home',
      'pages/me',
      'pages/me_profile',
      'pages/postList',
      'pages/coupons',
      'pages/store',
      'pages/card',
      'pages/card_about',
      'pages/card_activate',
      'pages/card_billing',
      'pages/card_recharge'
    ],
    tabBar: {
      color: '#666',
      selectedColor: '#b4282d',
      backgroundColor: '#fff',
      borderStyle: 'black',
      list: [
      {
        pagePath: 'pages/home',
        selectedIconPath: './images/tabbars/home_pressed.png',
        iconPath: './images/tabbars/home.png',
        text: '首页',
      },
      {
        pagePath: 'pages/apps',
        selectedIconPath: './images/tabbars/apps_pressed.png',
        iconPath: './images/tabbars/apps.png',
        text: '服务台',
      },
      {
        pagePath: 'pages/card',
        selectedIconPath: './images/tabbars/me_pressed.png',
        iconPath: './images/tabbars/me.png',
        text: '我的',
      }]
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      backgroundColor: "#f8f8f8"
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    const self = this
    console.log("onLaunch..............")
    req.appId(appId)
    req.baseUrl(baseUrl).interceptor(interceptor.request, interceptor.response)
    // app启动，判断用户是否已经授权，授权则调用一次loginServer，调用loginServer时会判断session_key是否过期，如过期则重新login，没有的话判断用户是否清理缓存，清理则调用login重新获取header，没有则重新设置一次缓存中的header，不再调用login。
    wx.getSetting({
      success: function(res) {
        if (res.authSetting['scope.userInfo']) {
          wx.getUserInfo({
            lang: 'zh_CN',
            success: res => {
              self.globalData.userInfo = res.userInfo;
              req.loginServer(serverAPI.LOGIN, res);
            }
          });
        }
      }
    });
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
