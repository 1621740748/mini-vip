<style lang="less">
  /*page{*/
    /*background-color: #ebebeb;*/
  /*}*/
  page{
    background-color: #F3F5F9;
  }

  .question{

    @height: 40px;
    @radius: 4px;
    width: 100%;


    @bigSelectBGColor: rgba(0, 213, 198, 1);

    @mainBackground: #4C7BD9;

    @meBackground: #4C7BD9;

    @otherBackground: #FFFFFF;

    .name{
      padding-top:50px;
      padding-left:20px;
      padding-right:45px;

      .page__title{
        max-height:80px;
        overflow:hidden;
        line-height:26px;
        font-size:20px;
        color:#2A2F35;
      }
    }

    .weui-footer__text{
      font-size: 14px;
    }

    .avatar{
      width:@height;
      height:@height;
      border-radius:20px;
    }

    .me-answer{
      .answer-text{
        margin-right: 15px;
        position: relative;
        max-width: 75%;
        .label{
          min-width: 50px;
          text-align: center;
          line-height: @height;
          padding-left: 10px;
          padding-right: 15px;
          color: #FFFFFF;
          background-color: @meBackground;
          border-radius: @radius;
          text-overflow:ellipsis;
          white-space:nowrap;
          overflow:hidden;
        }

        .trianglel{
          position: absolute;
          right: -25px;
          top: 25px;
          width:0;
          height:0;
          border-top:10px solid transparent;
          border-right:10px solid transparent;
          border-left:15px solid @meBackground;
          z-index: 999;
        }
      }
    }

    .more{
      text-align: center;
    }

    .question-section-me{
      position: absolute;
      bottom: 15%;
      width:100%;

      .me{
        line-height: @height;
        padding-right: 15px;
        color:#2A2F35;
        font-size: 17px;
      }

      .user-me{
        margin-bottom:15px;
        padding:0 40rpx;
        padding-right:26px;
      }

      .question-body{
        position: relative;
        margin-bottom: 25px;
        padding:0 40rpx;
        .weui-cells{
          background-color: @meBackground;
          color: #FFFFFF;
          border-radius: @radius;
        }

        .weui-cell_link{
          color: #e1e1e1;
        }

        .triangleb{
          position: absolute;
          right: 37px;
          top: -9px;
          width:0;
          height:0;
          border-right:10px solid transparent;
          border-bottom:10px solid @meBackground;
          border-left:10px solid transparent;
          z-index: 999;
        }
      }

      .big-select{
        border-radius:4px;
        background-color: @meBackground;
        .triangleb,.triangleb{
          border-bottom:10px solid @meBackground !important;
        }

        .selected{
          background-color:@meBackground;
          color: #FFFFFF;
        }
      }
    }

    .question-section-other{

      position: absolute;
      bottom: 20%;
      width:100%;

      .other{
        line-height: @height;
        padding-left: 10px;
      }

      .user-other{
        margin-bottom:15px;
      }

      .question-body{
        position: relative;
        margin-bottom: 15px;
        padding-left:15px;
        padding-right:15px;
        .weui-cells{
          background-color: @otherBackground;
          /*color: #FFFFFF;*/
          border-radius: @radius;
        }

        .weui-cell_link{
          color: #e1e1e1;
        }

        .triangleb{
          position: absolute;
          left: 25px;
          top: -9px;
          width:0;
          height:0;
          border-right:10px solid transparent;
          border-bottom:10px solid @otherBackground;
          border-left:10px solid transparent;
          z-index: 999;
        }
      }

      .big-select{
        border-radius:4px;
        background-color: @otherBackground;
        .triangleb,.triangleb{
          border-bottom:10px solid @otherBackground !important;
        }

        .placeholder{
          background-color: #999FAA;
          color: @otherBackground;
        }

        .selected{
          background-color:@meBackground;
          color: #FFFFFF;
        }
      }

      .important{
        .weui-check__hd_in-checkbox{
          display: inline-block;
        }
      }

      .weui-footer{
        position: absolute;
        width: 100%;
        height: 45px;
        bottom: -30px;
        color:#999FAA!important;
        .weui-footer__text{
          padding-top: 10px;
        }
      }
    }

    .submit{
      width: 100%;
      position: absolute;
      bottom: 0px;
      border-radius: 0px;
    }

    .weui-flex{
      flex-wrap: wrap;

      .placeholder{
        margin:5px;
        padding:0 10px;
        min-width: 50px;
        text-align:center;
        background-color:#FFFFFF;
        height:2.3em;
        line-height:2.3em;
        color:@mainBackground;
        border-radius: @radius;
      }
    }

    .big-select{
      border-radius:4px;
      background-color: @bigSelectBGColor;
      .triangleb,.triangleb{
        border-bottom:10px solid @bigSelectBGColor !important;
      }

      .selected{
        background-color:@mainBackground;
        color: #FFFFFF;
      }
    }

    .big-bang-select{
      margin-left:10px;
      margin-right:10px;
      position: absolute;
      padding-top:30px;
      bottom: 10%;
      top: 25px;
      z-index: 1999;
      /*min-height: 55%;*/

      .name{
        padding-bottom: 15px;
        padding-top: 0px;
        .page__title{
          text-align: center;
        }
      }

      .clear{
        position: absolute;
        right: -5px;
        top: -5px;
      }

      .weui-footer{
        color: #FFFFFF;
        .weui-check__hd_in-checkbox{
          padding-top:10px;
          display: inline-block;
        }

        icon{
          color: #FFFFFF;
        }
      }
    }

  }

  .question-progress {
    position: relative;
    height: 3px;
    border-radius: 0px;
    background-color: #e2e2e2;
  }

  .question-progress-bar {
    position: absolute;
    left: 0;
    top: 0;
    width: 0;
    max-width: 100%;
    height: 3px;
    border-radius: 0px;
    text-align: right;
    background-color: #5FB878;
    transition: all .3s;
    -webkit-transition: all .3s;
  }
</style>

<template>
  <view class="question-progress">
    <view class="question-progress-bar" style="width: {{progress}};"></view>
  </view>
  <view class="page question">
    <view class="name">
      <view class="page__title">{{question.label}}</view>
      <!--<view class="page__desc"></view>-->
    </view>

    <view class="me-answer" wx:if="{{!showQuestionMe}}" @tap="clickMeAnswer">
      <view class="weui-cell__ft weui-cells__title weui-flex">
        <view class="weui-flex__item"></view>
        <view class="answer-text">
          <view class="label">{{answer.me.label}}</view>
          <view class="trianglel"></view>
        </view>
        <image class="avatar" src="https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdPnqaKu1jtYB3xbJHAia4uUMX3ibxxqZJYZzGEJ0RleibCA3icNJLM6KKOqsFcmebgoLd0ib21Z7RVbw/132"></image>
      </view>
    </view>

    <view class="question-section-me" wx:else>
      <view class="weui-cell__ft weui-cells__title weui-flex user-me">
        <view class="weui-flex__item me">你</view>
        <image class="avatar" src="https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdPnqaKu1jtYB3xbJHAia4uUMX3ibxxqZJYZzGEJ0RleibCA3icNJLM6KKOqsFcmebgoLd0ib21Z7RVbw/132"></image>
      </view>
      <view class="question-body">
        <block wx:if="{{question.options_all.length > 4}}">
          <view class="big-select">
            <view class="triangleb"></view>
            <radio-group bindchange="radioChange" class="weui-flex">
              <repeat for="{{question.options_all}}" key="index" index="index" item="option">
                <label class="weui-flex__item" @tap="clickMeAnswerItem">
                  <radio class="weui-check" value="{{option.value}}" checked="{{option.value === answer.me.value}}"/>
                  <view class="placeholder">{{option.label}}</view>
                </label>
              </repeat>
            </radio-group>
          </view>
        </block>
        <block wx:else>
          <view class="triangleb"></view>
          <view class="weui-cells weui-cells_after-title">
            <radio-group bindchange="radioChange">
              <repeat for="{{question.options}}" key="index" index="index" item="option">
                <label class="weui-cell" @tap="clickMeAnswerItem">
                  <radio class="weui-check" value="{{option.value}}" checked="{{option.value === answer.me.value}}"/>
                  <view class="weui-cell__bd">{{option.label}}</view>
                  <view class="weui-cell__ft weui-cell__ft_in-radio">
                    <icon class="weui-icon-checkbox_circle" type="circle" size="23" wx:if="{{option.value != answer.me.value}}"></icon>
                    <icon class="weui-icon-checkbox_success" type="success" size="23" wx:if="{{option.value === answer.me.value}}"></icon>
                  </view>
                </label>
              </repeat>
            </radio-group>
            <view class="weui-cell more" wx:if="{{question.options_all.length > 4}}" @tap="clickMore">
              <view class="weui-cell__bd">更多...</view>
            </view>
          </view>
        </block>
      </view>
      <view class="weui-footer" wx:if="{{!question.required}}" @tap="goNext">
        <view class="weui-footer__text">跳过</view>
      </view>
    </view>


    <view class="question-section-other" wx:if="{{!showQuestionMe}}">
      <view class="weui-cells__title weui-flex user-other">
        <image class="avatar" src="https://lg-769qcuso-1253849369.cos.ap-shanghai.myqcloud.com/avatar.png"></image>
        <view class="weui-flex__item other">你的恋人</view>
      </view>
      <view class="question-body">
        <block wx:if="{{question.options_all.length > 4}}">
          <view class="big-select">
            <view class="triangleb"></view>
            <checkbox-group bindchange="checkboxChange" class="weui-flex">
              <repeat for="{{question.options_all}}" key="index" index="index" item="option">
                <label class="weui-flex__item">
                  <checkbox class="weui-check" value="{{option.value}}" checked="{{wxsLib.includes(answer.other, option.value)}}"/>
                  <view wx:if="{{wxsLib.includes(answer.other, option.value)}}" class="placeholder selected">{{option.label}}</view>
                  <view wx:else class="placeholder">{{option.label}}</view>
                </label>
              </repeat>
            </checkbox-group>
          </view>
        </block>
        <block wx:else>
          <view class="triangleb"></view>
          <view class="weui-cells weui-cells_after-title">
            <checkbox-group bindchange="checkboxChange">
              <repeat for="{{question.options}}" key="index" index="index" item="option">
                <label class="weui-cell">
                  <checkbox class="weui-check" value="{{option.value}}" checked="{{wxsLib.includes(answer.other, option.value)}}"/>
                  <view class="weui-cell__bd">{{option.label}}</view>
                  <view class="weui-cell__ft weui-check__hd_in-checkbox">
                    <icon class="weui-icon-checkbox_circle" type="circle" size="23" wx:if="{{!wxsLib.includes(answer.other, option.value)}}"></icon>
                    <icon class="weui-icon-checkbox_success" type="success" size="23" wx:if="{{wxsLib.includes(answer.other, option.value)}}"></icon>
                  </view>
                </label>
              </repeat>
            </checkbox-group>
            <view class="weui-cell more" wx:if="{{question.options_all.length > 4}}" @tap="clickMore">
              <view class="weui-cell__bd">更多...</view>
            </view>
          </view>
        </block>
      </view>

      <view class="weui-footer important" @tap="importantClick" wx:if="{{question.options_all.length != answer.other.length}}">
        <view class="weui-footer__text">
          这对我很重要
          <view class="weui-check__hd_in-checkbox">
            <icon class="weui-icon-checkbox_circle" type="circle" size="23" wx:if="{{!answer.important}}"></icon>
            <icon class="weui-icon-checkbox_success" type="success" size="23" wx:if="{{answer.important}}"></icon>
          </view>
        </view>
      </view>
      <view class="weui-footer" wx:else>
        <view class="weui-footer__text">
          <view>你选择了每一个答案</view>
          <view>此问题将被标记为无关紧要</view>
        </view>
      </view>
    </view>

    <button class="weui-btn submit" type="primary" @tap="submit" wx:if="{{answer.other.length > 0}}">提交</button>


    <view class="big-bang-select big-select" wx:if="{{showBigSelect}}">
      <view class="name">
        <view class="page__title">{{question.label}}</view>
      </view>
      <icon type="clear" size="20" color="red" class="clear" @tap="closeBigSelect"/>
      <block wx:if="{{showQuestionMe}}">
        <radio-group bindchange="radioChange" class="weui-flex">
          <repeat for="{{question.options_all}}" key="index" index="index" item="option">
            <label class="weui-flex__item" @tap="clickMeAnswerItem">
              <radio class="weui-check" value="{{option.value}}" checked="{{option.value === answer.me.value}}"/>
              <view class="placeholder">{{option.label}}</view>
            </label>
          </repeat>
        </radio-group>
      </block>
      <block wx:else>
        <checkbox-group bindchange="checkboxChange" class="weui-flex">
          <repeat for="{{question.options_all}}" key="index" index="index" item="option">
            <label class="weui-flex__item">
              <checkbox class="weui-check" value="{{option.value}}" checked="{{wxsLib.includes(answer.other, option.value)}}"/>
              <view wx:if="{{wxsLib.includes(answer.other, option.value)}}" class="placeholder selected">{{option.label}}</view>
              <view wx:else class="placeholder">{{option.label}}</view>
            </label>
          </repeat>
        </checkbox-group>
        <view class="weui-flex">
          <view class="weui-flex__item">
            <view class="weui-footer important" @tap="importantClick" wx:if="{{question.options_all.length != answer.other.length}}">
              <view class="weui-footer__text">
                这对我很重要
                <view class="weui-check__hd_in-checkbox">
                  <icon color="#FFFFFF" class="weui-icon-checkbox_circle" type="circle" size="23" wx:if="{{!answer.important}}"></icon>
                  <icon color="#FFFFFF" class="weui-icon-checkbox_success" type="success" size="23" wx:if="{{answer.important}}"></icon>
                </view>
              </view>
            </view>
            <view class="weui-footer" wx:else>
              <view class="weui-footer__text">
                <view>你选择了每一个答案</view>
                <view>此问题将被标记为无关紧要</view>
              </view>
            </view>
          </view>
        </view>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import wxsLib from '../wxs/lib.wxs'
  import _ from 'underscore'

  const OTHER = '_o';
  const IMPORTANT = '_i';

  export default class QuestionView extends wepy.component {

    wxs = {
      wxsLib: wxsLib,
    };

    /*
     args: {
      object_name: '',
      space_id: '',
      answered_url: '',
     }
    */
    props = {
      args: {
        type: Object
      }
    };

    async onLoad(e){
      if(this.$parent.$parent.globalData.my_spaces.length < 1){
        throw new Error('当前用户不属于任何Space')
      }
      const spaceId = this.$parent.$parent.globalData.my_spaces[0]._id; //TODO 处理spaceId 问题
      this.space_id = spaceId;
      //获取问题清单
      const object = JSON.parse(JSON.stringify(await this.$parent.$parent.getObject(this.object_name, spaceId)));
      console.log('object', object)
      this.questions = this.getQuestions(object.fields);

      this.questionKeys = _.keys(this.questions);

      console.log('this.questionKeys', this.questionKeys);

      //获取用户答案
      let query_options = {
        $filter: `owner eq '${this.$parent.$parent.globalData.user._id}'`
      };

      let result = await this.$parent.$parent.query(this.object_name, query_options, spaceId);

      if(result.value.length === 0){
        result = await this.$parent.$parent.insert(this.object_name, {
          owner: this.$parent.$parent.globalData.user._id
        }, spaceId);
      }

      this.questionsAnswer = result.value[0];

      this.pendingQuesionKeys = _.difference(this.questionKeys, _.keys(this.questionsAnswer));

      if(this.pendingQuesionKeys.length === 0){
        this.question = this.questions[_.last(this.questionKeys)];
      }else{
        this.question = this.questions[this.pendingQuesionKeys[0]];
      }

      this.progress = this.getProgress();

      console.log('this.pendingQuesionKeys', this.pendingQuesionKeys);

      console.log('result', this.questionsAnswer);

      console.log('this.questionKeys', this.questionKeys);
      console.log('this.question', this.question);
      this.$apply()
    }

    /*
    [
      {
        label: '',
        name: '',
        type: '',
        required: true/false,
        options: [],
        showOtherQuesion: true/false,
        showImportant: true/false
      }
    ]
    */
    getQuestions(fields){
      let questions = {};
      const keys = _.keys(fields);
      _.forEach(keys, (key)=>{
        let field = fields[key];
        if(key.slice(-OTHER.length) != OTHER && key.slice(-IMPORTANT.length) != IMPORTANT){

          let question = {};

          question.label = field.label || field.name;

          question.name = field.name;

          question.type = field.type;

          question.required = field.required || false;

          if(field.options){
            question.options = field.options.slice(0,4);
            question.options_all = field.options;
          }

          question.showOtherQuesion = _.include(keys, key + OTHER);

          question.showImportant = _.include(keys, key + IMPORTANT);

          questions[key] = question;
        }
      });
      return questions;
    }

//    getQuestion(field){
//      if(field.type === ''){}
//    }

    data = {
      object_name: 'love_answer',
      questionKeys: [],
      pendingQuesionKeys: [],
      questionIndex: 0,
      question: {
        label: 'Are you OK ?',
        options: [
          {label: 'YES', value: '0'},
          {label: 'NO', value: '1'},
          {label: 'hen qi guai shuo bu shang lai, hen qi guai shuo bu shang lai, hen qi guai shuo bu shang lai', value: '2'}
        ]
      },
      answer: {
        me: '',
        other: '',
        important: false
      },
      showQuestionMe: true,
      progress: '0%',
      questionsAnswer: {},
      showBigSelect: false,
    };

    getProgress(){
      return (1 - this.pendingQuesionKeys.length / this.questionKeys.length) * 100 + '%';
    }

    nextQuestion(){

      this.pendingQuesionKeys = this.pendingQuesionKeys.splice(1, this.pendingQuesionKeys.length);
      this.progress = this.getProgress();

      if(this.pendingQuesionKeys.length === 0){
        console.log('已经回答所有问题');

      }else{
        this.question = this.questions[this.pendingQuesionKeys[0]];
        this.answer = {
          me: '',
          other: '',
          important: false
        };
        this.showQuestionMe = true;
      }
      console.log('this.question', this.question);
      this.$apply()
    }

    methods = {
      radioChange: function (e) {
        console.log('radioChange', e);
        this.showQuestionMe = false;
        const radioItems = this.question.options_all;
        for (let i = 0, len = radioItems.length; i < len; ++i) {
          if(radioItems[i].value === e.detail.value){
            console.log('radioItems[i]', radioItems[i])
            this.answer.me = radioItems[i]
          }
        }

        console.log('this.answer.me', this.answer.me);

        this.showBigSelect = false;

        this.$apply();
      },
      clickMeAnswerItem: function () {
        this.showQuestionMe = false;
        this.$apply()
      },
      checkboxChange: function (e) {
        this.answer.other = e.detail.value;
        this.$apply();
      },
      importantClick: function (e) {
        this.answer.important = !this.answer.important;
        this.$apply();
      },
      submit: async function () {
        console.log('submit answer is ', this.answer);
        let qa = {};
        const q = this.question;
        const answer = this.answer;
        const questionsAnswer = this.questionsAnswer;

        const record_id = questionsAnswer._id;

        if(q.showOtherQuesion){
          qa[q.name + OTHER] = answer.other
        }

        if(q.showImportant){
          qa[q.name + IMPORTANT] = answer.important;

          if(answer.other.length === q.options_all.length){
            qa[q.name + IMPORTANT] = false;
          }
        }

        qa[q.name] = answer.me.value;

        console.log('qa', qa);

        await this.$parent.$parent.update(this.object_name, record_id, qa, this.space_id);

        this.nextQuestion();
      },
      clickMeAnswer: function (e) {
        this.showQuestionMe = true;
        this.answer.other = [];
        this.$apply();
      },
      goNext: function () {
        this.nextQuestion()
      },
      closeBigSelect: function () {
        this.showBigSelect = false;
        this.$apply();
      },
      clickMore: function () {
        this.showBigSelect = true;
        this.$apply();
      }
    }
  }
</script>
