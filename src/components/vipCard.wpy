<style lang="less">
.card {
  background-color: #7f7f7f;
  background-repeat: repeat-x;
  background-image: linear-gradient(135deg, #555555, #898989 50%, #555555);
  height: 400rpx;
  margin-top: 0rpx;
  margin-bottom: 30rpx;
  margin-left: 20rpx;
  margin-right: 20rpx;
  border-radius: 20rpx;
  display: flex;
  flex-direction: column;

  .info {
    display: flex;
    flex-direction: row;
    flex: 1;
  }

  .user-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    overflow: hidden;
    position: relative;
    margin: 27px 10px 0 20px;

    .image {
      width: 50px;
      height: 50px;
      border: 1px solid #fff;
      border-radius: 50%;
    }
  }

  .card-info {
    display: flex;
    margin-top: 27px;
    flex-direction: column;
    color: #fff;

    .card-name {
      margin-top: 2px;
      font-weight: bold;
      text-shadow: 0 2px 1px rgba(0, 0, 0, 0.2);
    }
  }

  .card-number {
    margin-left: 20px;
    margin-bottom: 15px;
    font-weight: bold;
    color: #fff;
    text-shadow: 0 2px 1px rgba(0, 0, 0, 0.2);
  }
}
</style>
<template>
	<view class="card">
    <view class="info">
      <view class="user-avatar">
        <open-data wx:if="{{isActivated}}" type="userAvatarUrl"></open-data>
        <image wx:else class="image" mode="aspectFit" src="../images/avatar.png"/>>
      </view>
		  <view class="card-info">
        <text class="card-name">{{cardName}}</text>
			  <text class="vip-card">{{cardType}}</text>
      </view>
    </view>
    <view class="card-number">
      <text>{{formatNumber}}</text>
    </view>
	</view>
</template>

<script>
import wepy from 'wepy';

export default class vipCard extends wepy.component {
  onLoad() {}

  props = {
    cardName: {
      type: String,
      default: ''
    },
    cardType: {
      type: String,
      default: ''
    },
    cardNumber: {
      type: String,
      default: ''
    },
    isActivated: {
      type: Boolean,
      default: false
    }
  }

  computed = {
    formatNumber() {
      let num_arr = this.cardNumber.split("");
      num_arr.forEach((item, index) => {
        (index+1) % 4 == 0 ? num_arr[index] = num_arr[index] + " " : num_arr[index]
      });
      console.log(num_arr)
      num_arr = num_arr.join("")
      return num_arr
    }
  }

  data = {};

  methods = {};
}
</script>
