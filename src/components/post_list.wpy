<style lang="less">
.post-header {
  
  .image {
    display: block;
    border-radius: 50%;
  }

  .space-name {
    line-height: 1.5rem;
  }
}

.post {
  background: #fff;
  margin:20rpx;
  border:solid 1px #ededed;
  border-radius:6px;

  .post-cover{
    image{
      display: block;
      width: 100%;
      height: 400rpx;
      border-top-left-radius:6px;
      border-top-right-radius:6px;
    }
    video{
      width: 100%;
      height: 400rpx;
      border-top-left-radius:6px;
      border-top-right-radius:6px;
    }

    .no-radius {
      border-radius: 0 !important;
    }
  }
  .post-body{
    padding:30rpx;
    margin-top: 0px;
    .post-name{
      max-height: 78px;
      overflow: hidden;
    }
    .post-summary{
      color:#888;
      font-size:14px;
      max-height:66px;
      overflow:hidden;
    }
    &.weui-cells{
      line-height:22px;
      font-size:16px;
      border-bottom-left-radius:6px;
      border-bottom-right-radius:6px;
      &.is-cover-empty{
        border-radius:6px;
      }
      &:before{
        display: none;
      }
      &:after{
        display: none;
      }
      .weui-cell{
        padding: 0px;
      }
    }
  }
  .post-footer {
    display: flex;
    font-size: 13px;
    border-top: 1px solid #ededed;
    color: #888;
    align-items: center;

    .action {
      flex: 1;
      padding:0 30rpx;
      font-size:13px;
      line-height:inherit;
      width:auto;
      height:auto;
      border:none;
      line-height:50px;
      align-items: center;

      .slds-icon {
        width: 1rem;
        height: 1rem;
        margin-right: 0.25rem;
      }
    }
    .slds-icon {
      display: inline-block;
    }
    .share-btn {
      display: flex;
      justify-content: flex-start;
      align-items: center;
    }
    .comment-btn {
      display: flex;
      justify-content: center;
    }
    .star-btn {
      display: flex;
      justify-content: flex-end;
      align-items: center;

      &.is-stared {
        color: #018cc6;
      }
    }
    .text {
      display: inline-block;
    }
  }
}
</style>
<template>
<view>
  <block wx:if="{{list.length}}">
    <repeat for="{{list}}" key="index" index="index" item="post">
      <view class="post" @longpress="goDelete({{post._id}}, {{post.space._id}}, {{post.owner._id}})">
        <navigator class="post-header" wx:if="{{showHeader}}" url="../space/index?space_id={{post.space._id}}">
          <view class="weui-cell weui-cell_access">
            <view class="weui-cell__hd">
              <image wx:if="{{post.space.avatar}}" class="image slds-icon slds-icon--small slds-m-right--x-small" src="{{util.formatImageUrl(post.space.avatar, baseUrl)}}"></image>
              <view wx:else class="slds-icon-standard-channel-programs slds-icon slds-icon--small slds-m-right--x-small"></view>
            </view>
            <view class="weui-cell__bd">
              {{post.space.name}}
            </view>
          </view>
        </navigator>
        <view class="post-cover">
          <block wx:if="{{post.video}}">
            <block wx:if="{{post.images}}">
              <image class="image {{showHeader ? 'no-radius' : ''}}" mode="aspectFill" src="{{util.formatImageUrl(post.images[0], baseUrl)}}" @tap="previewImage({{post.images}})" @error="loadImageError({{index}})" />
            </block>
          </block>
          <block wx:else>
            <block wx:if="{{post.images}}">
              <image class="image {{showHeader ? 'no-radius' : ''}}" mode="aspectFill" src="{{util.formatImageUrl(post.images[0], baseUrl)}}" @tap="previewImage({{post.images}})" @error="loadImageError({{index}})" />
            </block>
          </block>
        </view>
        <view class="post-body weui-cells {{post.images ? '' : 'is-cover-empty'}}" @tap="goDetail({{post._id}}, {{post.space._id}})">
          <view class="weui-cell weui-cell_access">
            <view class="weui-cell__bd">
              <view class="post-name">{{post.name}}</view>
              <view class="post-summary">{{post.summary}}</view>
            </view>
            <view class="weui-cell__ft weui-cell__ft_in-access"></view>
          </view>
        </view>
        <view class="post-footer ">
          <button plain="true" open-type="share" data-post-name="{{post.name}}" data-post-id="{{post._id}}" data-post-space="{{post.space._id}}" class="share action share-btn">
            <view class="vip_share-default slds-icon slds-icon--small slds-m-right--x-small"></view>
            <view class="text">转发</view>
          </button>
          <view class="comment action">
            <view class="comment-btn action" @tap="writeComment({{post._id}}, {{post.space._id}})">
              <view class="vip_comment-default slds-icon slds-icon--small slds-m-right--x-small"></view>
              <view class="text">评论</view>
            </view>
          </view>
          <view class="star action star-btn {{post.star_id ? 'is-stared' : ''}}" @tap="starPost({{post._id}}, {{post.space._id}}, {{index}})">
            <view class="vip_star-{{post.star_id ? 'blue' : 'default'}} slds-icon slds-icon--small slds-m-right--x-small"></view>
            <view class="text">{{post.star_count || 0}}</view>
          </view>
        </view>
      </view>
    </repeat>
  </block>
  <block wx:else>
    <view class="weui-loadmore weui-loadmore_line">
      <view class="weui-loadmore__tips weui-loadmore__tips_in-line">暂无动态</view>
    </view>
  </block>
</view>
</template>

<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import req from '@/network';
import { serverAPI } from '@/server';
import { demoSpaceId,demoStoreId } from '@/config'
import util from '../wxs/util.wxs'

export default class PostList extends wepy.component {

  props = {
    isHeaderShow: {
      type: Boolean,
      default: false
    },
    list: {
      type: Array,
      default: []
    },
    editable: {
      type: Boolean,
      default: false
    },
    showHeader: {
      type: Boolean,
      default: false
    }
  }

  watch = {
    list: async function (newValue, oldValue) {
      const parent = this.$parent.$parent;
      const user = parent.globalData.user._id;
      if(!this.list || !this.list.length){
        return;
      }
      const post_ids = this.list.map(function (post) {
        return post._id;
      })
      let query = post_ids.map(function (id) {
        return `star_post eq '${id}'`;
      })
      query = query.join(' or ');
      query = `user eq '${user}' and (${query})`;

      const options = {
        $filter: query
      }
      const result = await parent.query('user_star', options, 'guest')

      if (result && result.value) {
        result.value.forEach((star) => {
          this.list.forEach((post) => {
            if (star.star_post == post._id) {
              post.star_id = star._id
            }
          });
        });
      }
      this.$apply()
    }
  }

  async getStarCount(index) {
    const post_id = this.list[index]._id
    const space_id = this.list[index].space._id
    const result = await this.$parent.$parent.get('post', post_id, space_id);
    this.list[index].star_count = result.star_count || 0
    this.$apply()
  }

  async onLoad() {}

  data = {
    baseUrl: baseUrl,
    previousVideoId: null,
    currentVideoContext: null
  };

  wxs = {
    util: util
  };

  methods = {
    goDetail(post_id, space_id){
      let url = `../post/view?post_id=${post_id}&space_id=${space_id}`;
      if(this.editable){
        url += '&editable=true'
      }
      console.log("goDetail=====================");
      console.log(url);
      wx.navigateTo({
        url: url
      });
    },
    async goDelete(post_id, space_id, owner){
      console.log("goDelete==============post========list=======space_id====", space_id);
      console.log("goDelete==============post========list=======owner====", owner);
      await this.$parent.$parent.removeRecord('post', post_id, space_id, this.list, owner);
      this.$apply();
    },
    previewImage(images, event){
      var baseUrl = this.baseUrl;
      var current = `${baseUrl}/api/files/images/${images[0]}`;
      var urls = images.map((n)=>{
        return  `${baseUrl}/api/files/images/${n}`;
      });
      wx.previewImage({
        current: current,
        urls: urls
      });
    },
    loadImageError(index, event){
      // 当图片加载失败时，把图片数据的路径清空，formatImageUrl能默认显示加载失败的图片
      this.list[index].images[0] = "load_faild";
      this.$apply();
    }, 
    play(videoId){
      this.currentVideoContext = wepy.createVideoContext(videoId);
      if(this.previousVideoId && this.previousVideoId != videoId){
        let videoContext = wepy.createVideoContext(this.previousVideoId);
        videoContext.pause();
      }
      this.previousVideoId = videoId;
    },
    onParentHide(page){
      if(this.currentVideoContext){
        this.currentVideoContext.pause()
      }     
    },
    async starPost(post_id, space_id, index) {
      console.log(post_id, space_id, index)
      const parent = this.$parent.$parent
      const user = parent.globalData.user._id;
      const data = {
        user: user,
        star_post: post_id,
        owner: user
      }
      if (this.list[index].star_id) {
        await parent.delete('user_star', this.list[index].star_id, space_id)
        this.list[index].star_id = ''
        this.$apply()
      } else {
        const result = await parent.insert('user_star', data, space_id)
        if (result.value && result.value.length) {
          this.list[index].star_id = result.value[0]._id;
          this.$apply()
        }
      }
      await this.getStarCount(index)
    },
    writeComment(post_id, space_id) {
      wx.navigateTo({
        url: `../comment/index?object_name=post_comments&key_name=post_id&_id=${post_id}&space_id=${space_id}`
      })
    }
  };
}
</script>
