<!-- 最新动态 -->
<style lang="less">
page {
  height: 100%;
  .page {
    .image {
      display: block;
    }
    .page__hd {
      padding: 0px;
      .cover-wrapper {
        position: relative;
        height: 266px;
        .cover {
          width: 100%;
          height: 230px;
          position: absolute;
        }
        view.cover {
          background-color: #7f7f7f;
          background-repeat: repeat-x;
          background-image: linear-gradient(128deg, #565656, #555 50%, #343434);
          display: flex;
          align-items: center;
          justify-content: center;
          text {
            color: #262626;
            text-shadow: 1px 1px 0px #686868;
            font-size: 20px;
          }
        }
        .avatar {
          height: 72px;
          width: 72px;
          position: absolute;
          left: 20rpx;
          top: 178px;
          border: solid 2px #fff;
          box-shadow: 0px 0px 1px #6a6a6a;
        }
        .name {
          color: #fff;
          text-shadow: 0px 0px 5px #333;
          font-size: 20px;
          position: absolute;
          left: 96px;
          top: 196px;
          font-family: 黑体;
        }
      }
    }
    .page__bd{
      .need_read{
        display:block;
        background:#f00;
        border-radius:50%;
        width:0.4em;
        height:0.4em;
        margin-left:1.8rem;
        margin-top:-0.2rem;
        position:absolute;
      }
    }
  }
}
</style>
<template>
  <view class="page" wx:if="{{is_loaded}}">
    <view class="page__hd">
      <view class="cover-wrapper">
        <block wx:if="{{store_info.cover}}">
          <image class="cover" mode="aspectFill" src="{{util.formatImageUrl(store_info.cover, baseUrl)}}" @tap="uploadImage(true)"/>
        </block>
        <block wx:else>
          <view class="cover" @tap="uploadImage(true)">
            <text wx:if="{{is_space_owner}}">轻触设置封面</text>
          </view>
        </block>
        <block wx:if="{{store_info.avatar}}">
          <image class="avatar" mode="aspectFill" src="{{util.formatImageUrl(store_info.avatar, baseUrl)}}" @tap.stop="uploadImage()"/>
        </block>
        <block wx:else>
          <image class="avatar" mode="aspectFill" src="{{emptyImageUrlForAvatar}}" @tap.stop="uploadImage()"/>
        </block>
        <view class="name" @tap="uploadImage(true)">{{store_info.name}}</view>
      </view>
    </view>
    <view class="page__bd">
      <view class="weui-cells">
        <view class="weui-grids">
          <block wx:if="{{is_space_admin}}">
            <navigator url="/pages/admin/index?space_id={{space_id}}" class="weui-grid" hover-class="weui-grid_active">
              <view class="slds-icon-utility-settings weui-grid__icon slds-icon"/>
              <view class="weui-grid__label">商户管理</view>
            </navigator>
          </block>
          <block wx:if="{{card._id}}">
            <navigator url="{{card.url}}" class="weui-grid" hover-class="weui-grid_active">
              <view class="slds-icon-standard-opportunity weui-grid__icon slds-icon"/>
              <view class="weui-grid__label">我的会员卡</view>
            </navigator>
          </block>
          <block wx:else>
            <navigator url="/pages/card/select?space_id={{space_id}}" class="weui-grid" hover-class="weui-grid_active">
              <view class="slds-icon-standard-opportunity weui-grid__icon slds-icon"/>
              <view class="weui-grid__label">加入会员</view>
            </navigator>
          </block>
          <navigator url="../post/index{{is_space_owner ? '?editable=true' : ''}}" class="weui-grid" hover-class="weui-grid_active">
            <view class="slds-icon-standard-contract weui-grid__icon slds-icon">
              <view class="need_read1"></view>
            </view>
            <view class="weui-grid__label">最新动态</view>
          </navigator>
          <navigator url="../wifi?store={{space_id}}" class="weui-grid" hover-class="weui-grid_active">
            <view class="slds-icon-utility-wifi weui-grid__icon slds-icon"/>
            <view class="weui-grid__label">连接 Wi-Fi</view>
          </navigator>
          <navigator url="../store?store={{space_id}}" class="weui-grid" hover-class="weui-grid_active">
            <view class="slds-icon-standard-contact weui-grid__icon slds-icon"/>
            <view class="weui-grid__label">联系我们</view>
          </navigator>
        </view>
      </view>
      <scroll-view class="scroll-view_H" scroll-y="true">
        <postList :list.sync="posts" />
      </scroll-view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import postList from '../../components/post_list';
import req from '@/network';
import util from '../../wxs/util.wxs';

const DATA_LENGTH = 10;
export default class Posts extends wepy.page {
  config = {
    navigationBarTitleText: '会员小秘书',
    enablePullDownRefresh: true
  };

  onHide(){
    this.$invoke('postList', 'onParentHide');
  }

  async onLoad(e) {
    wepy.showLoading({
      title: '加载中',
      mask: true
    });
    this.space_id = e.space_id || this.$parent.globalData.space_id;

    await this.$parent.login(this.space_id);

    const userId = this.$parent.globalData.user._id
    const space = await this.$parent.get('spaces', this.space_id)
    const admins = space.admins

    console.log(space)

    if (admins.includes(userId)) {
      this.is_space_admin = true
    }

    await this.loadCardInfo();
    this.type = e.type;
    await this.loadStoreInfo();
    await this.loadPostList();
    this.is_loaded = true;
    this.$apply();
    wepy.hideLoading();
  }

  refresh() {
    this.posts = [];
    this.current_skip = 0;
    this.loadPostList();
  }

  components = {
    postList: postList
  };

  // 分享
  onShareAppMessage(res) {
    const space_id = this.space_id;
    const space_name = this.space_info.name;
    return {
      title: space_name,
      path: `pages/space/index?space_id=${space_id}`
    };
  }

  // 下拉刷新
  onPullDownRefresh() {
    this.refresh();
    setTimeout(() => {
      wx.stopPullDownRefresh();
    }, 200);
  }

  // 上拉加载
  onReachBottom() {
    this.loadPostList();
    console.log('onReachBottom');
  }

  data = {
    baseUrl: baseUrl,
    emptyImageUrlForCover: '/images/empty.png',
    emptyImageUrlForAvatar: '/images/avatar.png',
    type: '',
    posts: [],
    current_skip: 0,
    space_id: '',
    space_info: {},
    store_info: {},
    card: {},
    post_types: [],
    is_space_owner: false,
    is_space_admin: false,
    is_loaded: false
  };

  wxs = {
    util: util
  };

  async loadCardInfo() {
    const user = this.$parent.globalData.user._id;
    const options = {
      $filter: `owner eq '${user}'`,
      $expand: 'space($select=name),card_name($select=name)',
      $count: true,
      $select: 'is_actived,name,card_name,space'
    };
    const card = await this.$parent.query('vip_card', options);
    if (card.value[0] && card.value[0].is_actived) {
      this.card = card.value[0];
      this.card.url = `../card?card_id=${this.card._id}&space_id=${
        this.space_id
      }`;
      const vip_category = await this.$parent.get(
        'vip_category',
        this.card.card_name._id
      );
      this.card.avatar = vip_category.avatar;
    }
  }

  async loadStoreInfo() {
    const spaceId = this.space_id;
    const result = await this.$parent.get('vip_store', spaceId, spaceId);
    this.store_info = result;
    const space = await this.$parent.get('spaces', this.space_id);
    this.space_info = space;
    let globalData = this.$parent.globalData;
    this.is_space_owner =
      space && globalData.user && globalData.user._id == space.owner;
    this.$apply();
  }

  async loadPostList() {
    const skip = this.current_skip;
    const options = {
      $expand: 'owner($select=name)',
      $count: true,
      $select:
        'name,summary,description,comment_count,enable_comment,images,video,audio,type,mini_type',
      $skip: skip,
      $top: DATA_LENGTH
    };
    const type = this.type;
    if (type) {
      options.$filter = `type eq '${type}'`;
    }
    const result = await this.$parent.query('post', options);
    if (result.value) {
      this.posts = this.posts.concat(result.value);
      this.current_skip = skip + result.value.length;
    }
    this.$apply();
    wepy.stopPullDownRefresh();
  }

  methods = {
    async uploadImage(isCover) {
      if (!this.is_space_owner) {
        return;
      }
      const title = isCover ? '更换封面' : '更换头像';

      const result = await wepy.showActionSheet({
        itemList: [title]
      });
      if (!result.cancel) {
        const result2 = await wepy.chooseImage({
          count: 1,
          sizeType: ['compressed']
        });
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        const tempFilePaths = result2.tempFilePaths;
        if (tempFilePaths.length) {
          const authToken = this.$parent.globalData.user.auth_token;
          const userId = this.$parent.globalData.user._id;
          let tempSrc = "";
          if(isCover){
            tempSrc = this.store_info.cover;
            this.store_info.cover = tempFilePaths[0];
          }
          else{
            tempSrc = this.store_info.avatar;
            this.store_info.avatar = tempFilePaths[0];
          }
          this.$apply();
          wepy.showLoading({
            title: '正在上传...',
            mask: true
          });
          let formData = {};
          formData.size = result2.tempFiles.length && result2.tempFiles[0].size;
          const imageInfo = await wepy.getImageInfo({
            src: tempFilePaths[0]
          });
          formData.width = imageInfo.width;
          formData.height = imageInfo.height;
          formData.orientation = imageInfo.orientation;
          formData.type = imageInfo.type;
          const fileResult = await wepy.uploadFile({
            url: `${this.baseUrl}/s3/images`,
            filePath: tempFilePaths[0],
            name: 'file',
            formData: formData,
            header: {
              'X-Auth-Token': authToken,
              'X-User-Id': userId
            }
          }).catch((err)=>{
            console.log("error...",err)
          });
          const fileData = JSON.parse(fileResult.data);
          if (fileData.errors || fileResult.statusCode != 200) {
            wx.showToast({
              title: "图片上传失败，请稍后再试",
              icon: "none"
            });
            if(isCover){
              this.store_info.cover = tempSrc;
            }
            else{
              this.store_info.avatar = tempSrc;
            }
            this.$apply();
            return;
          }
          // TODO 更新对应表的字段
          const fileId = fileData._id;
          let storeSetKey = isCover ? "cover" : 'avatar';
          let storeSet = {};
          storeSet[storeSetKey] = fileId;
          await this.$parent.update("vip_store", this.space_id, storeSet, this.space_id);
          if(isCover){
            this.store_info.cover = fileId;
          }
          else{
            this.store_info.avatar = fileId;
          }
          this.$apply();
          wepy.hideLoading();
        }
      }
    }
  };
}
</script>
