<!-- 最新动态 -->
<style lang="less">
page {
  height: 100%;

  .top-container {
    position: relative;
  }
  .ion-container {
    display: inline-block;
    position: absolute;
    right: 15px;
    top: 15px;
    z-index: 1000;

    .ion {
      font-size: 30px;
      color: #fff;
    }

    .stared {
      color: #fcb95b;
    }
  }
  .page {
    .image {
      display: block;
    }

    .header {
      position: relative;
      background: #fff;

      // &::after {
      //   content: " ";
      //   position: absolute;
      //   left: 0;
      //   right: 0;
      //   bottom: 0;
      //   border-top: 1rpx solid #d9d9d9;
      // }

      .cover-wrapper {
        position: relative;
        height: 210px;
        background-size: cover;

        &::after {
          content: '';
          position: absolute;
          height: 80px;
          bottom: -30px;
          left: 0;
          right: 0;
          background-image: linear-gradient(to bottom, transparent , #efeef3 50%);
        }
      }

      .empty-cover {
        position: relative;
        height: 210px;
        background-image: url("https://lg-769qcuso-1253849369.cos.ap-shanghai.myqcloud.com/empty.png");
        display: flex;
        align-items: center;
        justify-content: center;

        .text {
          position: relative;
          top: -82px;
          color: #262626;
          text-shadow: 1px 1px 0px #686868;
          font-size: 20px;
        }
      }
      .space-info {
        position: absolute;
        text-align: center;
        top: 80px;
        bottom: -10px;
        left: 6px;
        right: 6px;
        width: auto;
        border: 1px solid transparent;
        padding: 10px;
        border-radius: 0.25rem;
        z-index: 100;

        &::before {
          content: '';
          position: absolute;
          top: 1px;
          bottom: 1px;
          left: 1px;
          right: 1px;
          background: rgba(255,255,255,0.8);
          z-index: -1 ;
          border-radius: 0.25rem;
        }

        .wrapper {
          position: relative;
          top: -50px;

          .avatar-container {
            // position: relative;
            // top: -60px;
            background: #fff;
            padding: 5px;
            border-radius: 0.25rem;
            display: inline-block;
            box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);
            .avatar {
              display: block;
              width: 70px;
              height: 70px;
            }
          }

          .store-name {
            margin-top: 8px;
            font-size: 18px;
            font-weight: bold;
          }

          .star-count {
            margin-top: 0px;
            color: #898989;
            display: none;
          }

          .weui-btn {
            display: inline-block;
            border-color: #018cc6;
            line-height: 31px;
            height: 31px;
            margin: 8px 4px 0;
          }

          .btn-star {
            color: #018cc6;
          }
          .btn-manage {
            background: #018cc6;
            color: #fff;
          }
        }
      }
    }

    .weui-grids {
      background: #fff;
    }


    .page__bd{
      .need_read{
        display:block;
        background:#f00;
        border-radius:50%;
        width:0.4em;
        height:0.4em;
        margin-left:1.8rem;
        margin-top:-0.2rem;
        position:absolute;
      }
    }
    .support {
      border: none;
      border-right:1rpx solid #d9d9d9;
      border-bottom:1rpx solid #d9d9d9;
      border-radius: 0;
      line-height: inherit;
    }
    .post-list-wrapper{
      margin-top: 8px;
    }
  }
}
</style>
<template>
  <view class="page" wx:if="{{is_loaded}}">
    <view class="top-container">
      <view class="header">
        <view wx:if="{{store_info.cover}}" class="cover-wrapper" @tap="uploadImage(true)" style="background-image: url({{util.formatImageUrl(store_info.cover, baseUrl)}})"></view>
        <view wx:else class="empty-cover" @tap="uploadImage(true)">
          <view class="text" wx:if="{{is_space_owner}}"></view>
        </view>
        <view class="space-info">
          <view class="wrapper">
            <view class="bg-image"></view>
            <view class="avatar-container">
              <image wx:if="{{store_info.avatar}}" class="avatar" mode="aspectFill" src="{{util.formatImageUrl(store_info.avatar, baseUrl)}}" @tap.stop="uploadImage()"/>
              <image wx:else class="avatar" mode="aspectFill" src="{{baseMaterialUrl + 'avatar.png'}}" @tap.stop="uploadImage()"/>
            </view>
            <view class="store-name">{{store_info.name}}</view>
            <view class="star-count">{{store_info.star_count}}位关注者</view>
            <button class="weui-btn btn-star" @tap="starSpace" type="primary" plain="true" size="mini">{{star_id ? "已关注" : "关注"}}</button>
            <button class="weui-btn btn-manage" open-type="share" type="primary" size="mini">转发</button>
          </view>
        </view>
      </view>
      <view class="weui-cells">
        <view class="weui-grids">
          <repeat for="{{enabled_objects}}" key="index" index="index" item="object">
            <block wx:if="{{object.is_default_menu}}">
              <block wx:if="{{object.name === 'support'}}">
                <button open-type="contact" plain="true" class="weui-grid support" hover-class="weui-grid_active" wx:if="{{object}}">
                  <view class="slds-icon-{{object.icon}} weui-grid__icon slds-icon">
                    <view class="need_read1"></view>
                  </view>
                  <view class="weui-grid__label">{{object.label}}</view>
                </button>
              </block>
              <block wx:else>
                <navigator url="{{object.url}}" class="weui-grid" hover-class="weui-grid_active" wx:if="{{object}}">
                  <view class="slds-icon-{{object.icon}} weui-grid__icon slds-icon">
                    <view class="need_read1"></view>
                  </view>
                  <view class="weui-grid__label">{{object.label}}</view>
                </navigator>
              </block>
            </block>
            <block wx:else>
              <block wx:if="{{object.name === 'support'}}">
                <button open-type="contact" plain="true" class="weui-grid support" hover-class="weui-grid_active" wx:if="{{object}}">
                  <image wx:if="{{object.avatar}}" class="image weui-grid__icon slds-icon" src="{{util.formatImageUrl(object.avatar, baseUrl)}}"></image>
                  <view class="weui-grid__label">{{object.name}}</view>
                </button>
              </block>
              <block wx:else>
                <navigator url="{{object.url}}" class="weui-grid" hover-class="weui-grid_active" wx:if="{{object}}">
                  <image wx:if="{{object.avatar}}" class="image weui-grid__icon slds-icon" src="{{util.formatImageUrl(object.avatar, baseUrl)}}"></image>
                  <view class="weui-grid__label">{{object.name}}</view>
                </navigator>
              </block>
            </block>
          </repeat>
        </view>
      </view>
      <!--
      <view class="weui-cells" wx:if="{{is_space_admin}}">
        <navigator url="/pages/admin/index?space_id={{space_id}}" class="weui-cell" hover-class="weui-cell_active">
          <view class="weui-cell__hd">
            <view class="slds-icon-utility-settings slds-icon slds-icon--small slds-m-right--x-small"/>
          </view>
          <view class="weui-cell__bd">微站管理</view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
      </view>
      -->
    </view>
    <view class="page__bd">
      <view class="post-list-wrapper">
        <scroll-view class="scroll-view_H" scroll-y="true">
          <postList :list.sync="posts" />
        </scroll-view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import { baseMaterialUrl } from '@/config';
import postList from '../../components/post_list';
import req from '@/network';
import util from '../../wxs/util.wxs';
import _ from 'underscore'

const DATA_LENGTH = 10;
export default class Posts extends wepy.page {
  config = {
    navigationBarTitleText: '微站',
    enablePullDownRefresh: true
  };

  onHide(){
    this.$invoke('postList', 'onParentHide');
  }

  async onLoad(e) {
    var scene = decodeURIComponent(e.scene)
    wepy.showLoading({
      title: '加载中',
      mask: true
    });
    console.log("onLoad==============space_index===================", e.space_id);
    this.space_id = e.space_id || scene;
    this.$parent.saveRecentSites(this.space_id);
    await this.$parent.login(this.space_id);
    await this.loadCardInfo();
    this.type = e.type;
    await this.loadStoreInfo();
    await this.loadPostList();
    await this.isSpaceStar();
    this.is_loaded = true;
    this.$apply();
    wepy.hideLoading();
  }

  async refresh() {
    this.is_skip_allowed = true;
    this.posts = [];
    this.current_skip = 0;
    await this.loadCardInfo();
    await this.loadStoreInfo();
    await this.loadPostList();
  }

  components = {
    postList: postList
  };

  // 分享
  onShareAppMessage(res) {
    console.log('onShareAppMessage', res)
    if (res.from == "button" && res.target.dataset.postId) {
      const postName = res.target.dataset.postName;
      const postId = res.target.dataset.postId;
      const spaceId = res.target.dataset.postSpace;
      return {
        title: postName,
        path: `pages/post/view?post_id=${postId}&space_id=${spaceId}`
      }
    }else{
      const space_id = this.space_id;
      const space_name = this.space_info.name;
      return {
        title: space_name,
        path: `pages/space/index?space_id=${space_id}`
      };
    }
  }

  // 下拉刷新
  onPullDownRefresh() {
    this.refresh();
    setTimeout(() => {
      wx.stopPullDownRefresh();
    }, 200);
  }

  // 上拉加载
  onReachBottom() {
    this.loadPostList();
    console.log('onReachBottom');
  }

  data = {
    baseUrl: baseUrl,
    baseMaterialUrl: baseMaterialUrl,
    emptyImageUrlForCover: 'https://lg-769qcuso-1253849369.cos.ap-shanghai.myqcloud.com/empty.png',
    type: '',
    posts: [],
    current_skip: 0,
    is_skip_allowed: true,
    space_id: '',
    space_info: {},
    store_info: {},
    enabled_objects: [],
    card: {},
    post_types: [],
    is_space_owner: false,
    is_space_admin: false,
    is_loaded: false,
    star_count: 0,
    star_id: '',
    is_default_menu:false
  };

  wxs = {
    util: util
  };

  async isSpaceStar() {
    const user = this.$parent.globalData.user._id;
    const space_id = this.space_id;
    const options = {
      $filter: `user eq '${user}' and star_space eq '${space_id}'`
    };
    const result = await this.$parent.query('user_star', options, space_id);
    if (result && result.value && result.value[0]) {
      console.log('isSpaceStar..............')
      this.star_id = result.value[0]._id;
      this.$apply();
    }
  }

  async loadCardInfo() {
    const user = this.$parent.globalData.user._id;
    const options = {
      $filter: `owner eq '${user}'`,
      $expand: 'space($select=name),card_name($select=name)',
      $count: true,
      $select: 'is_actived,name,card_name,space'
    };
    const card = await this.$parent.query('vip_card', options, this.space_id);
    if (card.value) {
      if (card.value[0] && card.value[0].is_actived) {
            this.card = card.value[0];
            this.card.url = `../card?card_id=${this.card._id}&space_id=${
              this.space_id
            }`;
            const vip_category = await this.$parent.get(
              'vip_category',
              this.card.card_name._id,
              this.space_id
            );
            this.card.avatar = vip_category.avatar;
      }
    }

  }

  async getStarCount() {
    const spaceId = this.space_id
    const result = await this.$parent.get('vip_store', spaceId, spaceId);
    this.store_info.star_count = result.star_count || 0
    this.$apply()
  }
  // async loadMenu() {
  //   const options = {
  //     $expand: 'space($select=name)',
  //     $count: true,
  //     $select:'name,avatar,related_to,sort_no,enabled'
  //   };
  //   const result = await this.$parent.query('vip_menu', options);
  //   console.log("menu====================",result.value)
  //   if (result.value) {
  //     this.enabled_objects = result.value
  //     this.enabled_objects.forEach(object => {
  //       if(object.related_to == 'post_category'){
  //         object['url'] = `../post/index${this.is_space_admin ? '?editable=true' : ''}?title=${space.name}`
  //       }
  //       if(object.related_to == 'vip_product_category'){
  //         object['url'] = `../product/list?space_id=${this.space_id}`
  //       }
  //     });
  //   }
  //   this.$apply();
  // }
  async loadStoreInfo() {
    const self = this
    const spaceId = this.space_id;
    console.log("loadStoreInfo===================", spaceId);
    const space = await this.$parent.get('spaces', spaceId, spaceId);
    const admins = space.admins
    const globalData = this.$parent.globalData;
    const userId = globalData.user._id
    this.space_info = space;
    this.is_space_owner = space && userId == space.owner;
    this.is_space_admin = admins && admins.includes(userId);
    const objects_list = {
      post: {
        label: '动态',
        icon: 'standard-news',
        is_default_menu: true,
        url: `../post/index?space_id=${this.space_id}${this.is_space_admin ? '&editable=true' : ''}&title=${space.name}`
      },
      vip_product: {
        label: '商城',
        icon: 'standard-shipment',
        is_default_menu: true,
        url: `../product/list?space_id=${this.space_id}`
      },
      vip_event: {
        label: '活动',
        icon: 'standard-event',
        is_default_menu: true,
        url: `../event/list?space_id=${this.space_id}`
      },
      vip_team: {
        label: '团队',
        icon: 'standard-team-member',
        is_default_menu: true,
        url: '../404'
      },
      vip_job: {
        label: '招聘',
        icon: 'standard-person-account',
        is_default_menu: true,
        url: '../404'
      },
      vip_store: {
        label: '联系我们',
        icon: 'standard-contact',
        is_default_menu: true,
        url: `../store?store=${this.space_id}`
      },
      support: {
        name: 'support',
        label: '在线客服',
        is_default_menu: true,
        icon: 'standard-live-chat',
      },
      qrcode: {
        label: '二维码',
        icon: 'standard-product',
        is_default_menu: true,
        url: `/pages/admin/qrcode?space_id=${this.space_id}`
      },
      vip_wifi: {
        label: 'Wifi',
        icon: 'utility-wifi',
        is_default_menu: true,
        url: `../wifi?space_id=${this.space_id}`
      },
      vip_card: {
        label: '会员',
        icon: 'standard-opportunity',
        is_default_menu: true,
        url: (function () {
          if (self.card._id) {
            return self.card.url
          } else {
            return `/pages/card/select?space_id=${self.space_id}`
          }
        })()
      },
    }

    const result = await this.$parent.get('vip_store', spaceId, spaceId);
    const options = {
      $filter: `enabled eq true`,
      $expand: 'space($select=name)',
      $count: true,
      $select:'name,avatar,related_to,sort_no,enabled',
      $orderby:'sort_no'
    };
    const menu = await this.$parent.query('vip_menu', options,spaceId);
    if (menu.value && menu.value.length) {
      this.enabled_objects = menu.value
      this.enabled_objects.forEach(object => {
        if(object.related_to.o == 'post_category'){
          if(object.related_to.ids){
            object['url'] = `../post/index?&category_id=${object.related_to.ids[0]}&space_id=${this.space_id}${this.is_space_admin ? '&editable=true' : ''}&title=${space.name}`
          }else{
            object['url'] = `../post/index?space_id=${this.space_id}${this.is_space_admin ? '&editable=true' : ''}&title=${space.name}`
          }
        }
        if(object.related_to.o == 'post'){
          if(object.related_to.ids){
            object['url'] = `../post/view?post_id=${object.related_to.ids[0]}&space_id=${spaceId}`
          }else{
            object['url'] = `../post/index?space_id=${this.space_id}${this.is_space_admin ? '&editable=true' : ''}&title=${space.name}`
          }         
        }
        if(object.related_to.o == 'vip_product_category'){
          if(object.related_to.ids) {
            object['url'] = `../product/list?space_id=${this.space_id}`
          }else{
            object['url'] = `../product/list?space_id=${this.space_id}`
          }
        }
        if(object.related_to.o == 'vip_product'){
          if(object.related_to.ids){
            object['url'] = `../product/view?record_id=${object.related_to.ids[0]}&space_id=${spaceId}`
          }else{
            object['url'] = `../product/list?space_id=${this.space_id}`
          }
        }
        if(object.related_to.o == 'vip_store'){
          object['url'] = `../store?store=${this.space_id}`
        }
        if(object.related_to.o == 'vip_event'){
          if(object.related_to.ids){
            object['url'] = `../event/view?space_id=${this.space_id}&event_id=${object.related_to.ids[0]}`
          }else{
            object['url'] = `../event/list?space_id=${this.space_id}`
          }          
        }
      });
    }
    if (result.enabled_objects && !_.isEmpty(result.enabled_objects)) {
      _.each(result.enabled_objects, (o) => {
        this.enabled_objects.push(objects_list[o])
      })
    }
    this.$apply()

    if (!result.star_count) {
      result.star_count = 0
    }
    this.store_info = result;
    this.$apply();
  }

  async loadPostList() {
    if(!this.is_skip_allowed){
      return;
    }
    const skip = this.current_skip;
    const options = {
      $expand: 'space($select=name),owner($select=name)',
      $count: true,
      $select:
        'name,summary,description,comment_count,enable_comment,images,video,audio,type,mini_type,space,star_count,owner',
      $skip: skip,
      $top: DATA_LENGTH
    };
    const type = this.type;
    if (type) {
      options.$filter = `type eq '${type}'`;
    }
    const result = await this.$parent.query('post', options, this.space_id);
    if (result.value) {
      this.posts = this.posts.concat(result.value);
      this.current_skip = skip + result.value.length;
      if (this.current_skip >= result['@odata.count']) {
        this.is_skip_allowed = false;
      }
    }
    this.$apply();
    wepy.stopPullDownRefresh();
  }

  methods = {
    async uploadImage(isCover) {
      if (!this.is_space_owner) {
        return;
      }
      const title = isCover ? '更换封面' : '更换头像';

      const result = await wepy.showActionSheet({
        itemList: [title]
      });
      if (!result.cancel) {
        const result2 = await wepy.chooseImage({
          count: 1,
          sizeType: ['compressed']
        });
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        const tempFilePaths = result2.tempFilePaths;
        if (tempFilePaths.length) {
          const authToken = this.$parent.globalData.user.auth_token;
          const userId = this.$parent.globalData.user._id;
          let tempSrc = "";
          if(isCover){
            tempSrc = this.store_info.cover;
            this.store_info.cover = tempFilePaths[0];
          }
          else{
            tempSrc = this.store_info.avatar;
            this.store_info.avatar = tempFilePaths[0];
          }
          this.$apply();
          wepy.showLoading({
            title: '正在上传...',
            mask: true
          });
          let formData = {};
          formData.size = result2.tempFiles.length && result2.tempFiles[0].size;
          const imageInfo = await wepy.getImageInfo({
            src: tempFilePaths[0]
          });
          formData.width = imageInfo.width;
          formData.height = imageInfo.height;
          formData.orientation = imageInfo.orientation;
          formData.type = imageInfo.type;
          const fileResult = await wepy.uploadFile({
            url: `${this.baseUrl}/s3/images`,
            filePath: tempFilePaths[0],
            name: 'file',
            formData: formData,
            header: {
              'X-Auth-Token': authToken,
              'X-User-Id': userId
            }
          }).catch((err)=>{
            console.log("error...",err)
          });
          const fileData = JSON.parse(fileResult.data);
          if (fileData.errors || fileResult.statusCode != 200) {
            wx.showToast({
              title: "图片上传失败，请稍后再试",
              icon: "none"
            });
            if(isCover){
              this.store_info.cover = tempSrc;
            }
            else{
              this.store_info.avatar = tempSrc;
            }
            this.$apply();
            wepy.hideLoading();
            return;
          }
          // TODO 更新对应表的字段
          const fileId = fileData._id;
          let storeSetKey = isCover ? "cover" : 'avatar';
          let storeSet = {};
          storeSet[storeSetKey] = fileId;
          let updateSuc = await this.$parent.update("vip_store", this.space_id, storeSet, this.space_id);
          if(!updateSuc){
            wx.showToast({
              title: "图片上传失败，请稍后再试",
              icon: "none"
            });
            if(isCover){
              this.store_info.cover = tempSrc;
            }
            else{
              this.store_info.avatar = tempSrc;
            }
          }
          this.$apply();
          wepy.hideLoading();
        }
      }
    },
    async starSpace() {
      const space_id = this.space_id;
      const user = this.$parent.globalData.user._id;
      const data = {
        user: user,
        star_space: space_id,
        owner: user
      }
      if (this.star_id) {
        await this.$parent.delete('user_star', this.star_id, space_id)
        this.star_id = ''
        await this.getStarCount()
        this.$apply()
      } else {
        const result = await this.$parent.insert('user_star', data, space_id)
        if (result.value && result.value.length) {
          this.star_id = result.value[0]._id;
          await this.getStarCount()
          this.$apply()
        }
      }
    },
    manageSpace() {
      const space_id = this.space_id;
      wx.navigateTo({
        url: `/pages/admin/index?space_id=${space_id}`
      })
    }
  };
}
</script>
