<!-- 最新动态 -->
<style lang="less">
page {
  height: 100%;
  .page{
    .image {
      display: block;
    }
    .page__hd{
      padding: 0px;
      .cover-wrapper{
        position:relative;
        height: 296px;
        .cover{
          width: 100%;
          height: 260px;
          position:absolute;
        }
        view.cover{
          background-color:#7f7f7f;
          background-repeat:repeat-x;
          background-image:linear-gradient(128deg, #565656, #555 50%, #343434);
          display:flex;
          align-items:center;
          justify-content:center;
          text{
            color: #262626;
            text-shadow:1px 1px 0px #686868;
            font-size:20px;
          }
        }
        .avatar{
          height: 72px;
          width: 72px;
          position:absolute;
          left: 20rpx;
          top: 208px;
          border:solid 2px #fff;
          box-shadow:0px 0px 1px #6a6a6a;
        }
        .name{
          color: #fff;
          text-shadow: 3px 3px 3px #333;
          font-size: 20px;
          position: absolute;
          left: 96px;
          top: 226px;
          font-family:黑体;
        }
      }
    }
  }
}
</style>
<template>
  <view class="page" wx:if="{{is_loaded}}">
    <view class="page__hd">
      <view class="cover-wrapper">
        <block wx:if="{{store_info.cover}}">
          <image class="cover" mode="aspectFill" src="{{util.formatImageUrl(store_info.cover, baseUrl)}}" @tap="uploadImage(true)"/>
        </block>
        <block wx:else>
          <view class="cover" @tap="uploadImage(true)">
            <text wx:if="{{is_space_owner}}">轻触设置封面</text>
          </view>
        </block>
        <block wx:if="{{store_info.avatar}}">
          <image class="avatar" mode="aspectFill" src="{{util.formatImageUrl(store_info.avatar, baseUrl)}}" @tap.stop="uploadImage()"/>
        </block>
        <block wx:else>
          <image class="avatar" mode="aspectFill" src="{{emptyImageUrlForAvatar}}" @tap.stop="uploadImage()"/>
        </block>
        <view class="name" @tap="uploadImage(true)">{{store_info.name}}</view>
      </view>
    </view>
    <view class="page__bd">
      <view class="weui-cells">
        <view class="weui-grids">
          <block wx:if="{{card._id}}">
            <navigator url="{{card.url}}" class="weui-grid" hover-class="weui-grid_active">
              <view class="slds-icon-standard-opportunity weui-grid__icon slds-icon"/>
              <view class="weui-grid__label">我的会员卡</view>
            </navigator>
          </block>
          <block wx:else>
            <navigator url="/pages/card/select?space_id={{space_id}}" class="weui-grid" hover-class="weui-grid_active">
              <view class="slds-icon-standard-opportunity weui-grid__icon slds-icon"/>
              <view class="weui-grid__label">加入会员</view>
            </navigator>
          </block>
          <repeat for="{{post_types}}" wx:key="*this" key="index" index="index" item="post">
            <navigator url="../post/index?type={{post.value}}&title={{post.label}}" class="weui-grid" hover-class="weui-grid_active">
              <view class="slds-icon-standard-{{post.icon}} weui-grid__icon slds-icon"/>
              <view class="weui-grid__label">{{post.label}}</view>
            </navigator>
          </repeat>
          <navigator url="../store?store={{space_id}}" class="weui-grid" hover-class="weui-grid_active">
            <view class="slds-icon-standard-call weui-grid__icon slds-icon"/>
            <view class="weui-grid__label">联系我们</view>
          </navigator>
        </view>
      </view>
      <scroll-view class="scroll-view_H" scroll-y="true">
        <postList :list.sync="posts" />
      </scroll-view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import postList from '../../components/post_list';
import req from '@/network';
import util from '../../wxs/util.wxs'

const DATA_LENGTH = 10;
export default class Posts extends wepy.page {
  config = {
    navigationBarTitleText: '会员小秘书',
    enablePullDownRefresh: true
  };

  async onLoad(e) {
    wepy.showLoading({
      title: '加载中',
      mask: true
    });
    this.space_id = e.space_id || this.$parent.globalData.space_id;
    await this.$parent.login(this.space_id);
    await this.loadCardInfo();
    await this.loadPostTypes();
    this.type = e.type;
    await this.loadStoreInfo();
    await this.loadPostList();
    this.is_loaded = true;
    this.$apply();
    wepy.hideLoading();
  }

  refresh() {
    this.posts = [];
    this.current_skip = 0;
    this.loadPostList();
  }

  components = {
    postList: postList
  };

  // 分享
  onShareAppMessage(res) {
    const space_id = this.space_id
    const space_name = this.space_info.name;
    return {
      title: space_name,
      path: `pages/space/index?space_id=${space_id}`
    };
  }

  // 上拉刷新
  onPullDownRefresh() {
    this.refresh();
    console.log('onPullDownRefresh....');
  }

  // 下拉加载
  onReachBottom() {
    this.loadPostList();
    console.log('onReachBottom');
  }

  data = {
    baseUrl: baseUrl,
    emptyImageUrlForCover: "/images/empty.png",
    emptyImageUrlForAvatar: "/images/avatar.png",
    type: "",
    posts: [],
    current_skip: 0,
    space_id: '',
    space_info: {},
    store_info: {},
    card: {},
    post_types: [],
    is_space_owner: false,
    is_loaded: false
  };

  wxs = {
    util: util
  };

	async loadCardInfo(){
    const user = this.$parent.globalData.user._id;
    const options = {
      $filter: `owner eq '${user}'`,
      $expand: 'space($select=name),card_name($select=name)',
      $count: true,
      $select: 'is_actived,name,card_name,space'
    };
    const card = await this.$parent.query('vip_card', options);
    if (card.value[0] && card.value[0].is_actived) {
      this.card = card.value[0]
      this.card.url = `../card?card_id=${this.card._id}&space_id=${this.space_id}`
      const vip_category = await this.$parent.get('vip_category', this.card.card_name._id)
      this.card.avatar = vip_category.avatar
    }
  };
  
	async loadStoreInfo(){
    const spaceId = this.space_id;
    const result = await this.$parent.get("vip_store", spaceId, spaceId);
    this.store_info = result;
    const space = await this.$parent.get('spaces', this.space_id)
    this.space_info = space;
    let globalData = this.$parent.globalData;
    this.is_space_owner = space && globalData.user && globalData.user._id == space.owner;
    this.$apply();
  };

  async loadPostTypes(){
    const store_id = this.space_id
    const data = {
      $filter: `_id eq '${store_id}'`,
      $select: 'post_types'
    };
    const result = await this.$parent.query('vip_store', data);
    const showPostTypes = [];
    const allPostTypes = [
        {value: "announcements", label: "公告通知", icon: "announcement"},
        {value: "about", label: "关于我们", icon: "contact"},
        {value: "news", label: "新闻动态", icon: "contract"},
        {value: "course", label: "线上课程", icon: "event"},
        {value: "help", label: "会员指南", icon: "performance"},
        {value: "jobs", label: "招兵买马", icon: "groups"}];
    if(result.value[0] && result.value[0].post_types && result.value[0].post_types.length>0){
      const dbPostTypes = result.value[0].post_types;
      dbPostTypes.forEach(function(post){
        const showPostType = allPostTypes.filter(function(m){
          if(m.value==post){
            return m;
          }else{
            return null;
          }
        });
        if(showPostType && showPostType.length>0){
          showPostTypes.push(showPostType[0]);    
        }
      });
      this.post_types = showPostTypes;
    }else{
      this.post_types = allPostTypes;
    }
    this.$apply();
  }

	async loadPostList(){
    const skip = this.current_skip;
    const options = {
      $expand: 'owner($select=name)',
      $count: true,
      $select: 'name,summary,description,comment_count,enable_comment,images,video,audio,type,mini_type',
      $skip: skip,
      $top: DATA_LENGTH
    };
    const type = this.type;
    if(type){
      options.$filter = `type eq '${type}'`;
    }
    const result = await this.$parent.query("post", options);
    if(result.value){
      this.posts = this.posts.concat(result.value);
      this.current_skip = skip + result.value.length;
    }
    this.$apply();
    wepy.stopPullDownRefresh();
  };
  
  methods = {
    async uploadImage(isCover){
      if(!this.is_space_owner){
        return;
      }
      const title = isCover ? "更换封面" : "更换头像";

      const result = await wepy.showActionSheet({
          itemList: [title]
      });
      if (!result.cancel) {
        const result2 = await wepy.chooseImage({
          count: 1,
          sizeType: ['compressed']
        });
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        const tempFilePaths = result2.tempFilePaths;
        if(tempFilePaths.length){
          if(isCover){
            this.store_info.cover = tempFilePaths[0];
          }
          else{
            this.store_info.avatar = tempFilePaths[0];
          }
          this.$apply();
          // wepy.showToast({  
          //   title: '正在上传...',  
          //   icon: 'loading',  
          //   mask: true,  
          //   duration: 10000  
          // });
          // wepy.uploadFile({
          //   url: `${baseUrl}/s3/`,
          //   filePath: tempFilePaths[0],
          //   name: ''
          // });
        }
      }
    }
  };
}
</script>
