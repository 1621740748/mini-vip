<style lang="less">
  .ion {
    color: #09bb07;
  }
  .weui-textarea {
    height:3.3em;
  }

  .button-sp-area{
    margin: 0 auto;
    padding-top: 15px;
    width: 60%;
  }

	.open-settings{
		display:inherit;
		font-size: 14px;
		border-radius: 0px;
		width: auto;
		height: 50px;
		line-height: 50px;
		color: #09bb07;
		background-color: #ffffff;
	}

	.open-settings:after{
		border: 0px;
	}
</style>

<template>
<view class="page">
  <view class="page__bd">
    <form bindsubmit="submitFieldForm" report-submit='true' >
      <view class="weui-cells">
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <textarea data-id="{{key}}" name="{{key}}" class="weui-textarea" auto-focus="true" value="{{value.address}}" ></textarea>
          </view>
          <view class="weui-cell__ft">
						<view wx:if="{{showOpenSetting}}" class="city-item">
							<button open-type="openSetting" class="weui-btn open-settings weui-vcode-btn" bindopensetting="openSetting">定位失败，请点击授权</button>
						</view>
            <view class="weui-vcode-btn" @tap="getAddress" wx:else>选择</view>
          </view>
        </view>
      </view>
      <view class="button-sp-area">
        <button class="weui-btn" type="primary" form-type="submit" plain="true" @tap="confirm" hover-class='button-hover'>确定</button>
      </view>
    </form>
  </view>
</view>
</template>

<script>
import wepy from 'wepy';
import req from '@/network';
import { serverAPI } from '@/server';

export default class Location extends wepy.page {
  config = {
    navigationBarTitleText: '编辑'
  }

  data = {
    key: '',
    value: '',
		showOpenSetting: false
  }

  async onLoad(e) {
    console.log('location', e)

    this.key = e.key;
    if (e.value) {
      this.value = JSON.parse(e.value)
    } else {
      this.value = {}
    }

		const setting = await wepy.getSetting();
		if(setting.authSetting["scope.userLocation"] === false){
			this.showOpenSetting = true;
		}

    this.$apply();

    if (e.title) {
      wx.setNavigationBarTitle({title: '编辑' + e.title});
    }
  }

  setParentValue(key, value) {
    const pages = getCurrentPages();
    const prevPage = pages[pages.length - 2];
    prevPage.changeValue(key, value)
  }

	chooseLocation(){
		self = this;
		const key = this.key;
		wepy.chooseLocation().then(res => {
			if (!self.value) {
				self.value = {}
			}
			self.value.address = res.address;
			self.value.latitude = res.latitude;
			self.value.longitude = res.longitude;
			self.setParentValue(key, self.value)
			self.$apply();
		}).catch(err => {
			console.log(err)
			if (err.errMsg == 'chooseLocation:fail auth deny') {
				self.showOpenSetting = true
				self.$apply()
			}
		});
	}

  methods = {
		openSetting: async function(e){
			self = this;
			if(e.detail.authSetting["scope.userLocation"]){
				this.showOpenSetting = false;
				this.chooseLocation()
				self.$apply();
			}
		},
    getAddress(e) {
      this.chooseLocation()
    },
    submitFieldForm(e){
      const formValues = e.detail.value;
      const key = this.key;
      this.value.address = formValues[key];
      this.setParentValue(key, this.value);
      wepy.navigateBack({
        delta: 1
      })
    }
  }
}

</script>
