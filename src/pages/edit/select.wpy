<template>
  <view class="page-edit-text">
    <view class="page__bd">
      <view class="weui-cells">
        <checkbox-group bindchange="selectChange" data-id="{{key}}" wx:if="{{multiple}}">
          <repeat for="{{options}}" key="index" index="index" item="option">
            <label class="weui-cell weui-check__label">
              <checkbox class="weui-check" value="{{option.value}}" checked="{{option.checked}}" />
              <view class="weui-cell__bd">{{option.label}}</view>
              <view class="weui-cell__ft weui-cell__ft_in-radio" wx:if="{{option.checked}}">
                <icon class="weui-icon-radio" type="success_no_circle" size="16"></icon>
              </view>
            </label>
          </repeat>
        </checkbox-group>
        <radio-group bindchange="radioChange" data-id="{{key}}" wx:else>
          <repeat for="{{options}}" key="index" index="index" item="option">
            <label class="weui-cell weui-check__label">
              <radio class="weui-check" value="{{option.value}}" checked="{{option.checked}}"/>
              <view class="weui-cell__bd">{{option.label}}</view>
              <view class="weui-cell__ft weui-cell__ft_in-radio" wx:if="{{option.checked}}">
                <icon class="weui-icon-radio" type="success_no_circle" size="16"></icon>
              </view>
            </label>
          </repeat>
        </radio-group>
      </view>
    </view>
  </view>
</template>


<script>
  import wepy from 'wepy';

  export default class Select extends wepy.page {
    config = {
      navigationBarTitleText: '选择'
    };

    data = {
      key: '',
      options: [],
      multiple: false
    }

    setParentValue(key, value){
      const pages = getCurrentPages();
      const prevPage = pages[pages.length - 2]
      prevPage.changeValue(key, value)
    }

    getObjectField(key){
      const pages = getCurrentPages();
      const prevPage = pages[pages.length - 2]
      return prevPage.data.$form$schema.fields[key]
    }

    onLoad(e) {
      if (!e) {
        e = {}
      }

      this.key = e.key

      let field;

      if(e.field){
        field = JSON.parse(e.field);
        let value = e.value || '';
        if(field.multiple){
          value = value.split(',')
          field.options.forEach(function (o) {
            if(value.indexOf(o.value) > -1){
              o.checked = true
            }
          });
        }else{
          field.options.forEach(function (o) {
            if(o.value === value){
              o.checked = true
            }
          });
        }

        if(!e.key){
          this.key = field.name
        }
      }else{
        field = this.getObjectField(e.key)
      }

      this.multiple = field.multiple || false

      this.options = field.options
      if (e.title) {
        wx.setNavigationBarTitle({title: '选择' + e.title});
      }
    }

    methods = {
      selectChange: function (e) {
        let values = [];
        const chooseOptions = e.detail.value 
        const key = e.target.dataset.id;
        let checkboxItems = this.options
        for (let i = 0, lenI = checkboxItems.length; i < lenI; ++i) {
          checkboxItems[i].checked = false;

          for (let j = 0, lenJ = chooseOptions.length; j < lenJ; ++j) {
            if (checkboxItems[i].value == chooseOptions[j]) {
              checkboxItems[i].checked = true;
              break;
            }
          }
        }

        this.options.forEach((option) => {
          const v = option.value
          if (chooseOptions && chooseOptions.includes(v)) {
            values.push(v)
          }
        })

        console.log('selectChange.......', values)
        this.setParentValue(key, values)
      },
      radioChange: function (e) {
        const radioItems = this.options, key = e.target.dataset.id;
        for (let i = 0, len = radioItems.length; i < len; ++i) {
          radioItems[i].checked = radioItems[i].value == e.detail.value;
        }
        this.setParentValue(key, e.detail.value)
      }
    }
  }
</script>
