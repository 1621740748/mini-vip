<template>
  <view class="page-edit-text">
    <view class="page__bd">
      <view class="weui-cells">
        <checkbox-group bindchange="selectChange" data-id="{{key}}" wx:if="{{multiple}}">
          <repeat for="{{options}}" key="index" index="index" item="option">
            <label class="weui-cell weui-check__label">
              <checkbox class="weui-check" value="{{option.value}}" checked="{{option.checked}}" />
              <view class="weui-cell__bd">{{option.label}}</view>
              <view class="weui-cell__ft weui-cell__ft_in-radio" wx:if="{{option.checked}}">
                <icon class="weui-icon-radio" type="success_no_circle" size="16"></icon>
              </view>
            </label>
          </repeat>
        </checkbox-group>
        <radio-group bindchange="radioChange" data-id="{{key}}" wx:else>
          <repeat for="{{options}}" key="index" index="index" item="option">
            <label class="weui-cell weui-check__label">
              <radio class="weui-check" value="{{option.value}}" checked="{{option.checked}}"/>
              <view class="weui-cell__bd">{{option.label}}</view>
              <view class="weui-cell__ft weui-cell__ft_in-radio" wx:if="{{option.checked}}">
                <icon class="weui-icon-radio" type="success_no_circle" size="16"></icon>
              </view>
            </label>
          </repeat>
        </radio-group>
      </view>
    </view>
  </view>
</template>


<script>
  import wepy from 'wepy';
  import _ from 'underscore';
  export default class Lookup extends wepy.page {
    config = {
      navigationBarTitleText: '选择'
    };

    data = {
      key: '',
      options: [],
      multiple: false
    };

    setParentValue(key, value){
      const pages = getCurrentPages();
      const prevPage = pages[pages.length - 2];
      prevPage.changeValue(key, value)
    }

    getObjectField(key){
      const pages = getCurrentPages();
      const prevPage = pages[pages.length - 2];
      return prevPage.data.$autoform$schema.fields[key]
    }

    onLoad(e) {
      if (!e) {
        e = {}
      }

      this.key = e.key

      const field = this.getObjectField(e.key);

      this.multiple = field.multiple || false;

      this.options = field.options;
      if (e.title) {
        wx.setNavigationBarTitle({title: '选择' + e.title});
      }
    }

    methods = {
      selectChange: function (e) {
        const values = e.detail.value, key = e.target.dataset.id;
        let checkboxItems = this.options;
        for (let i = 0, lenI = checkboxItems.length; i < lenI; ++i) {
          checkboxItems[i].checked = false;
          for (let j = 0, lenJ = values.length; j < lenJ; ++j) {
            if (checkboxItems[i].value == values[j]) {
              checkboxItems[i].checked = true;
              break;
            }
          }
        }

        const checkedItems = _.filter(checkboxItems, function(item){ return item.checked; });
        let field_values = [];
        _.forEach(checkedItems, function (item) {
          field_values.push({_id: item.value, name: item.label})
        });

        this.setParentValue(key, field_values)
      },
      radioChange: function (e) {
        const radioItems = this.options, key = e.target.dataset.id;
        for (let i = 0, len = radioItems.length; i < len; ++i) {
          radioItems[i].checked = radioItems[i].value == e.detail.value;
        }
        const checkedItem  = _.find(radioItems, function(item){ return item.checked});
        this.setParentValue(key, {_id: checkedItem.value, name: checkedItem.label})
      }
    }
  }
</script>
