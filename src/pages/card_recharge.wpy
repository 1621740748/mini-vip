<style lang="less">
.page__hd_bg {
  overflow: hidden;
  text-align: center;
  padding: 40px;
}
.margin-top {
  margin-top: 20px;
}
.small-font {
  font-size: 10px;
}
.big-font {
  font-size: 30px;
}
.middle-font {
  font-size: 15px;
}
</style>
<template>
  <view class="page">
    <view class="page__hd page__hd_bg">
      <view>
        <view class="weui-form-preview__value_in-hd"><label class="middle-font">￥</label> <label class="big-font">{{cardBalance}}</label></view>
        <view class="weui-footer__text small-font" @tap="toBillingRecords">查看余额明细</view>
        <view class="weui-footer__text small-font">(钱包余额不可提现)</view>
      </view>
    </view>
    <view class="weui-cells weui-cells_after-title margin-top">
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__bd">
          <input class="weui-input" type="digit" placeholder="请输入充值金额" bindinput="bindKeyInput" value="{{rechargeValue}}"/>
        </view>
      </view>
    </view>
    <view class="weui-btn-area">
      <button class="weui-btn" type="primary" @tap="doRecharge" disabled="{{!canDoRecharge}}">确定</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import req from '@/network';

export default class CardRecharge extends wepy.page {
  config = {
    navigationBarTitleText: '我的账户'
  };

  data = {
    rechargeValue: '',
    canDoRecharge: false,
    cardId: '',
    cardBalance: '',
    space_id: ''
  };

  onLoad(e) {
    console.log('onLoad');
    console.log(e);
    this.cardId = e.card_id;
    this.cardBalance = e.balance;
    this.space_id = e.space_id || this.$parent.globalData.space_id;
    console.log(this.$parent.globalData.vip_card);
  }

  methods = {
    bindKeyInput(e) {
      this.rechargeValue = e.detail.value;
      this.$apply();
      var val = Number(e.detail.value);
      if (val > 0) {
        this.canDoRecharge = true;
        this.$apply();
      } else {
        this.canDoRecharge = false;
        this.$apply();
      }
    },
    doRecharge() {
      wx.showLoading({
        title: '正在准备支付',
        mask: true
      });
      var that = this;
      var amount = parseFloat(parseFloat(this.rechargeValue).toFixed(2));
      var newOrder = {
        name: '会员卡充值',
        amount: amount,
        status: 'draft',
        store: this.space_id,
        card: this.cardId,
        type: 'recharge',
        owner: this.$parent.globalData.user._id
      };
      this.$parent.insert('vip_order', newOrder, this.space_id).then(o => {
        console.log(o);
        if (o.value) {
          var data = {
            // totalFee: parseInt(this.rechargeValue * 100)
            amount: amount,
            order_id: o.value[0]._id
          };

          req.post('/api/steedos/weixin/card/recharge', data).then(res => {
            wx.hideLoading();
            console.log('res: ', res);

            if (res.paySign) {
              wx.requestPayment({
                timeStamp: res.timeStamp,
                nonceStr: res.nonceStr,
                package: res.package,
                signType: 'MD5',
                paySign: res.paySign,
                success: function(msg) {
                  console.log('success: ', msg);
                  wx.showLoading({
                    title: '更新余额中',
                    mask: true
                  });
                  that.$parent.get('vip_card', that.cardId, that.space_id).then(c => {
                    that.cardBalance = c.balance.toFixed(2);
                    that.rechargeValue = '';
                    that.canDoRecharge = false;
                    that.$apply();
                    wx.hideLoading();

                    let pages = getCurrentPages();
                    let prePage = pages[pages.length - 2];
                    prePage.changeData('cardBalance', that.cardBalance);
                  });
                },
                fail: function(msg) {
                  console.log('fail: ', msg);
                },
                complete: function(msg) {}
              });
            } else {
              console.error(res);
              wx.showModal({
                content: '请求超时，请检查网络状况',
                showCancel: false
              });
            }
          });
        } else if (o.error) {
          console.error(o.error);
        }
      });
    },
    toBillingRecords() {
      wx.navigateTo({
        url: 'card_billing?card_id=' + this.cardId
      });
    }
  };
}
</script>
