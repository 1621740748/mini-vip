<style lang="less">
page {
  height: 100%;

  .top-container {
    position: relative;
  }
  .ion-container {
    display: inline-block;
    position: absolute;
    right: 30rpx;
    top: 30rpx;
    z-index: 1000;

    .ion {
      font-size: 60rpx;
      color: #fff;
    }

    .stared {
      color: #fcb95b;
    }
  }
  .page {
    &.is-open {
      .header{
        .cover-wrapper{
          height: 300rpx;
          &::after {
            content: '';
            position: absolute;
            height: 160rpx;
            bottom: -60rpx;
            left: 0;
            right: 0;
            background-image: linear-gradient(to bottom, transparent , #efeef3 50%);
          }
        }
      }
      .weui-grids{
        margin-top: 1.17647059em;
      }
    }

    .image {
      display: block;
    }

    .header {
      position: relative;

      .cover-wrapper{
        position: relative;
        height: 300rpx;
        background-size: cover;
      }
      .image{
        width: 100%;
      }
      .empty-cover {
        position: relative;
        height: 210px;
        background-image: url("https://lg-769qcuso-1253849369.cos.ap-shanghai.myqcloud.com/empty.png");
        display: flex;
        align-items: center;
        justify-content: center;

        .text {
          position: relative;
          top: -82px;
          color: #262626;
          text-shadow: 1px 1px 0px #686868;
          font-size: 20px;
        }
      }
      .space-info {
        position: relative;
        text-align: center;
        margin: 0 20rpx;
        border-radius: 0.25rem;
        top: -100rpx;
        width: auto;
        border: 1px solid transparent;
        padding-bottom: 20rpx;
        background: #fff;
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);
        z-index: 100;

        .heart {
          position: absolute;
          right: 0;
          top: -64rpx;
          width: 1.75rem;
          height: 1.75rem;
        }

        .wrapper {
          top: -100rpx;
          margin-top: 155rpx;
          padding: 0 40rpx;

          .avatar-container {
            background: #fff;
            padding: 10rpx;
            border-radius: 50%;
            display: inline-block;
            box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);
            position: absolute;
            left: calc(~"50% - 135rpx");
            top: -145rpx;

            .avatar {
              border-radius: 50%;
              display: block;
              width: 250rpx;
              height: 250rpx;
            }

            .sex-container {
              position: absolute;
              width: 35rpx;
              height: 35rpx;
              background: #fff;
              right: 14rpx;
              bottom: 6rpx;
              border-radius: 50%;
              padding: 8rpx;
              &.boy {
                border: 4rpx solid #00aeef;
              }
              &.girl {
                border: 4rpx solid #ec148e;
              }
              .sex-img {
                display: block;
                width: 100%;
                height: 100%;
              }
            }
          }

          .love-heart {
            display: flex;
            align-items: center;
            justify-content: center;
            color: #823c3d;
            font-weight: bold;
            .love-img {
              margin-right: 0.5rem;
            }
          }

          .name {
            font-size: 44rpx;
            font-weight: bold;
          }

          .introduction {
            font-size: 32rpx;
            margin-top: 10rpx;
            font-weight: bold;
          }

          .zodiac-constellation{
            display: flex;
            margin-top: 10rpx;
            font-size: 30rpx;
            color: #777;
            justify-content: center;
            view {
              padding: 0 6rpx;
            }
          }

          .star-count {
            margin-top: 0px;
            color: #898989;
            display: none;
          }

          .btn-star {
            color: #018cc6;
          }
          .btn-manage {
            background: #018cc6;
            color: #fff;
          }
        }
      }
    }

    .weui-grids {
      background: #fff;
      margin-top: 0px;
    }


    .page__bd{
      .need_read{
        display:block;
        background:#f00;
        border-radius:50%;
        width:0.4em;
        height:0.4em;
        margin-left:1.8rem;
        margin-top:-0.2rem;
        position:absolute;
      }
    }
    .support {
      border: none;
      border-right:1rpx solid #d9d9d9;
      border-bottom:1rpx solid #d9d9d9;
      border-radius: 0;
      line-height: inherit;
    }
    .post-list-wrapper{
      margin-top: 30rpx;
    }
  }
}
</style>

<template>
  <view class="page" wx:if="{{is_loaded}}">
    <view class="top-container">
      <view class="header">
        <view wx:if="{{cover}}">
          <view class="cover-wrapper" @tap="uploadImage(true)" style="background-image: url(https://lg-otd9qzs8-1257216007.cos.ap-shanghai.myqcloud.com/header.jpg)"></view>
        </view>
        <view wx:else class="empty-cover" @tap="uploadImage(true)">
          <view class="text" wx:if="{{is_space_owner}}"></view>
        </view>
        <view class="space-info">
          <view class="heart {{record.heart ? 'vip_heart-light' : 'vip_heart-default'}} slds-icon slds-icon--small slds-m-left--x-small" @tap="markHeart({{record._id}},{{record.heart}})"></view>
          <view class="wrapper">
            <view class="bg-image"></view>
            <view class="avatar-container">
              <image class="avatar" mode="aspectFill" src="{{util.formatImageUrl(avatar, baseUrl)}}" @tap.stop="uploadImage()"/>
              <view class="sex-container {{about_me.sex == '男' ? 'boy' : 'girl'}}">
                <image wx:if="{{about_me.sex == '男'}}" class="sex-img" mode="aspectFill" src="https://lg-otd9qzs8-1257216007.cos.ap-shanghai.myqcloud.com/boy.png"></image>
                <image wx:else class="sex-img" mode="aspectFill" src="https://lg-otd9qzs8-1257216007.cos.ap-shanghai.myqcloud.com/each_love.png"></image>
              </view>
            </view>
            <view class="love-heart" wx:if="{{heartSummary}}">
              <image class="love-img slds-icon slds-icon--small slds-m-left--x-small" mode="aspectFit" src="https://lg-otd9qzs8-1257216007.cos.ap-shanghai.myqcloud.com/love_heart.png"></image>
              <view>{{heartSummary}}</view>
            </view>
            <view class="name">{{name}}</view>
            <view wx:if="{{about_me.self_introduction}}" class="introduction">{{about_me.self_introduction}}</view>
            <view class="zodiac-constellation">
              <view wx:if="{{about_me.sex}}">{{about_me.sex}}</view>
              <view wx:if="{{about_me.age}}">{{about_me.age}}岁</view>
              <view wx:if="{{about_me.height}}">{{about_me.height}}cm</view>
              <view wx:if="{{about_me.constellation}}">{{about_me.constellation}}座</view>
              <view wx:if="{{about_me.live}}">{{about_me.live}}</view>
            </view>
          </view>
        </view>
      </view>

      <view class="weui-cells" style="margin-top: -20px">
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <view>我对他的匹配度</view>
          </view>
          <view class="weui-cell__ft">{{util.fixed(record.a_to_b, 2)}}%</view>
        </view>
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <view>他对我的匹配度</view>
          </view>
          <view class="weui-cell__ft">{{util.fixed(record.b_to_a, 2)}}%</view>
        </view>
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <view>综合匹配度</view>
          </view>
          <view class="weui-cell__ft">{{util.fixed(record.match, 2)}}%</view>
        </view>
      </view>

    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import util from '../../wxs/util.wxs';
import { baseMaterialUrl } from '@/config';
import { loveSpaceId } from '@/config';

export default class loveIntroduce extends wepy.page {
  config = {
    navigationBarTitleText: '个人资料',
  };

  data = {
    is_loaded: false,
    space_id: loveSpaceId,
    about_me: {},
    current_customer: {},
    record: {},
    b_record: {},
    userId: '',
    cover: '',
    avatar: '',
    name: '',
    is_owner: false,
    // heart_summary: '',
    baseUrl: baseUrl,
    baseMaterialUrl: baseMaterialUrl,
    loveSpaceId: loveSpaceId,
    settings: [{
      icon: 'slds-icon-standard-client',
      label: '关于我',
      url: `/pages/love/papers_view?object_name=love_about_me&space_id=${loveSpaceId}&required=true`,
      object_name: 'love_about_me'
    },{
      icon: 'slds-icon-standard-campaign',
      label: '筛选条件',
      url: `/pages/love/papers_view?object_name=love_looking_for&space_id=${loveSpaceId}`,
      object_name: 'love_looking_for'
    },{
      icon: 'slds-icon-standard-social',
      label: '问答匹配',
      url: `/pages/love/papers_view?object_name=love_answer&space_id=${loveSpaceId}`,
      object_name: 'love_answer'
    }]
  }

  wxs = {
    util: util
  }

  async onLoad(e) {
    this.userId = e.userId || this.$parent.globalData.user._id;
    this.$apply();

    const record_id = e._id;
		const space_id = e.space_id;
		const options = {
			$expand: 'user_b($select=profile,name),owner($select=profile,name)'
		}
		const a_record = await this.$parent.get('love_friends', record_id, space_id, options);

		this.record = a_record;

    const b_options = {
      $filter: `(owner eq '${a_record.user_b._id}' and user_b eq '${a_record.owner._id}')`
    }
    const b_result = await this.$parent.query('love_friends', b_options, space_id);
    const b_record = b_result.value[0];
    this.b_record = b_record;

    // if (b_record.heart) {
    //   this.heart_summary = '对方关注了你';
    // }

    // if (a_record.heart && b_record.heart) {
    //   this.heart_summary = '互相关注';
    // }

    this.$apply();
  }

  async onShow() {
    wx.showLoading({ mask: true });
    if (this.userId != this.$parent.globalData.user._id) {
      this.is_owner = false;
      this.$apply();
    } else {
      this.is_owner = true;
      this.$apply();
    }
    const a_options = {
      $filter: `(owner eq '${this.userId}' and space eq '${this.space_id}')`,
      $expand: 'owner($select=name,profile)'
    }
    const result = await this.$parent.query('vip_customers', a_options, this.space_id);
    const customer = result.value[0];
    this.name = customer.owner.name;

    if (!this.cover) {
      if (customer.cover) {
        this.cover = customer.cover;
      } else {
        this.cover = customer.owner.profile.avatar;
      }
    }

    if (!this.avatar) {
      if (customer.avatar) {
        this.avatar = customer.avatar;
      } else {
        this.avatar = customer.owner.profile.avatar;
      }
    }

    const b_options = {
      $filter: `(owner eq '${this.userId}')`
    }
    const about_me = await this.$parent.query('love_about_me', b_options, loveSpaceId);
    if (about_me && about_me.value && about_me.value[0]) {
      this.about_me = about_me.value[0];
    }

    this.is_loaded = true;
    this.$apply();
    wx.hideLoading();
  }

  computed = {
    heartSummary() {
      let heart_summary = '';
      if (this.b_record.heart) {
        heart_summary = '对方关注了你';
      }

      if (this.record.heart && this.b_record.heart) {
        heart_summary = '互相关注';
      }
      return heart_summary
    }
  }

  methods = {
    async uploadImage(isCover) {
      if (!this.is_owner) {
        return
      }

      const title = isCover ? '更换封面' : '更换头像';

      const result = await wepy.showActionSheet({
        itemList: [title]
      });
      if (!result.cancel) {
        const result2 = await wepy.chooseImage({
          count: 1,
          sizeType: ['compressed']
        });
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        const tempFilePaths = result2.tempFilePaths;
        if (tempFilePaths.length) {
          const authToken = this.$parent.globalData.user.auth_token;
          const userId = this.$parent.globalData.user._id;
          let tempSrc = "";
          if(isCover){
            tempSrc = this.cover;
            this.cover = tempFilePaths[0];
          }
          else{
            tempSrc = this.avatar;
            this.avatar = tempFilePaths[0];
          }
          this.$apply();
          wepy.showLoading({
            title: '正在上传...',
            mask: true
          });
          let formData = {};
          formData.size = result2.tempFiles.length && result2.tempFiles[0].size;
          const imageInfo = await wepy.getImageInfo({
            src: tempFilePaths[0]
          });
          formData.width = imageInfo.width;
          formData.height = imageInfo.height;
          formData.orientation = imageInfo.orientation;
          formData.type = imageInfo.type;
          const fileResult = await wepy.uploadFile({
            url: `${this.baseUrl}/s3/images`,
            filePath: tempFilePaths[0],
            name: 'file',
            formData: formData,
            header: {
              'X-Auth-Token': authToken,
              'X-User-Id': userId
            }
          }).catch((err)=>{
            console.log("error...",err)
          });
          const fileData = JSON.parse(fileResult.data);
          if (fileData.errors || fileResult.statusCode != 200) {
            wx.showToast({
              title: "图片上传失败，请稍后再试",
              icon: "none"
            });
            if(isCover){
              this.cover = tempSrc;
            }
            else{
              this.avatar = tempSrc;
            }
            this.$apply();
            wepy.hideLoading();
            return;
          }
          // TODO 更新对应表的字段
          const fileId = fileData._id;
          let storageKey = isCover ? 'cover' : 'avatar';
          let storageSet = {};
          storageSet[storageKey] = fileId;

          let updateSuc = await this.$parent.update("vip_customers", this.current_customer._id, storageSet, this.space_id);
  
          if (!updateSuc) {
            wx.showToast({
              title: "图片上传失败，请稍后再试",
              icon: "none"
            });
            if(isCover){
              this.cover = tempSrc;
            }
            else{
              this.avatar = tempSrc;
            }
          } else {
            let my_customers = this.$parent.globalData.my_customers;
            my_customers = my_customers.map(c => {
              if (c.space == loveSpaceId) {
                c[storageKey] = fileId;
              }
              return c
            })
            this.$parent.globalData.my_customers = my_customers;
          }
          this.$apply();
          wepy.hideLoading();
        }
      }
    },
    async markHeart(_id, heart, event) {
      console.log('[markHeart]', _id, heart);
      wx.showNavigationBarLoading();
      if(event == undefined){
        event = heart;
        heart = false;
      }
      let values = {
        heart: !heart
      };
      let res = await this.$parent.update("love_friends", _id, values, this.space_id);
      if(res){
        this.record.heart = !heart;
      }
      this.$apply();
      wx.hideNavigationBarLoading();
    },
  }
}
</script>
