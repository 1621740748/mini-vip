<style lang="less">
.friend-list {
  .weui-cell__bd {
    font-size: 0;
    height: 80rpx;
    display: flex;
    flex-direction: column;
    justify-content: center;
    .name {
      font-size: 36rpx;
    }
    .group-name {
      font-size: 28rpx;
      line-height: 28rpx;
      height: 28rpx;
      color: #aaa;
    }
  }
  .record-container {
    // padding-right: 0;  

    .heart {
      height: 80rpx;
      margin: 0;
      width: 1.75rem;
      border-right: 15px solid transparent;
      border-left: 0.5rem solid transparent;
    }
  }
}

.header {
  display: flex;
  align-items: center;
  .switch-group {
    margin-left: 16rpx;
    height: 80rpx;
  }
  .switch-group::after {
    transform: rotate(135deg);
  }
}

.image {
  width: 100%;
  height: 100%;
  border-radius: 0.15rem;
}

.avatar-field {
  border-radius: 50%;
  margin-right: 16rpx;
  vertical-align: middle;
  width: 80rpx;
  height: 80rpx;
}
.record-index {
  margin-right: 30rpx;
}
.record-match {
  color: #fa8b15;
}

.tab-bar {
  font-size: 15px;
  display: flex;
  position: fixed;
  box-sizing: border-box;
  z-index: 500;
  bottom: 0;
  height: 100rpx;
  width: 100%;
  background-color: #fff;
  color: #6d6d78;
  align-items: center;

  .btn-toolbar-primary {
    flex-direction: column;
    flex: 1;
    padding: 0 30rpx;
    font-size: 15px;
    width: auto;
    height: 100rpx;
    border: none !important;
    line-height: 100rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #1aad19 !important;
    color: #fff !important;
    border-radius: 0;
  }
}
.light {
  width: 50px;
  height: 50px;
}
.page-else .page__bd {
  padding: 20% 5%;
  text-align: center;
  color: #00396b;
  font-size: 18px;
}
.page-index {
  position: relative;
  z-index: 10;
  .page__hd {
    padding: 20rpx 40rpx;
    .love-title {
      margin-top: 80rpx;
      color: #00396b;
      font-size: 65rpx;
      font-weight: bold;
      text-align: center;
    }
  }
  .page__bd {
    padding: 20rpx 40rpx;
    .love-summary {
      color: #00396b;
      font-size: 45rpx;
      margin-bottom: 40rpx;
      text-align: center;
    }
    .btn-join {
      background: #1aad19;
      padding: 6px;
      color: #fff;
      font-weight: bold;
      margin-top: 120rpx;
    }
  }
}
.user-active {
  border: none !important;
  text-align: left;
  font-size: 17px;
}
.weui-cells {
  position: relative;
  z-index: 10;
}
.btn-filter {
  position: relative;
  .filter-light-dot {
    position: absolute;
    background: red;
    width: 20rpx;
    height: 20rpx;
    border-radius: 50%;
    top: -6rpx;
    right: -6rpx;
  }
}
.btn-answer {
  color: #fff;
  font-size: 15px;
}
.l-collect {
  width: 130rpx;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #fff;
  image {
    display: block;
    height: 46rpx;
    width: 46rpx;
  }
}
</style>

<template>
  <view class="page friend-list" wx:if="{{is_loaded}}">
    <view class="page__bd" style="margin-bottom: 20rpx">
      <view class="cover-page-bg"></view>
      <view class="weui-cells top-hearder">
        <view class="weui-cell weui-cell_access">
          <view class="weui-cell__hd header" @tap="switchGroup">
            <block wx:if="{{open_group_id == '-1'}}">
              好友缘分榜
            </block>
            <block wx:elif="{{open_group_id && open_group_id != '-1'}}">
              <open-data class="group-name" type="groupName" open-gid="{{open_group_id}}"></open-data>
            </block>
            <block wx:else>
              好友缘分榜
            </block>
            <view wx:if="{{answered}}" class="weui-cell__ft switch-group weui-cell__ft_in-access"></view>
          </view>
          <view class="weui-cell__bd">
          </view>
          <block wx:if="{{answered}}">
            <view class="weui-cell__ft btn-filter" @tap="goFilter">
              <view class="slds-icon-custom-custom3 slds-icon slds-icon--small slds-m-left--x-small"></view>
              <view class="filter-light-dot" wx:if="{{matching_filter_enable}}"></view>
            </view>
          </block>
        </view>
      </view>
      <block wx:if="{{answered}}">
        <block wx:if="{{record_list.length}}">
          <view class="weui-cells">
            <repeat for="{{record_list}}" key="index" index="index" item="record">
              <block wx:if="{{record.user_b.name}}">
                <view @tap="goIntroduce({{record}})" class="record-container weui-cell weui-cell_access" data-item-id="{{record._id}}" hover-class="{{record.match == undefined ? '' : 'weui-cell_active'}}">
                  <view class="weui-cell__hd record-index">
                    {{index + 1}}
                  </view>
                  <view class="weui-cell__hd">
                    <image src="{{record.user_b.avatarUrl}}" class='avatar-field' />
                  </view>
                  <view class="weui-cell__bd">
                    <view class="name">{{record.user_b.name}}</view>
                  </view>
                  <block wx:if="{{answered}}">
                    <view class="weui-cell__ft" wx:if="{{record.match == undefined}}" style="font-size: 36rpx">答题中</view>
                    <view class="weui-cell__ft record-match weui-cell__ft_in-access" wx:else style="font-size: 36rpx">{{util.fixed(record.match,2)}}%</view>
                    <!-- <view class="weui-cell__ft heart-container"><view class="heart vip_heart-{{record.heart ? 'light' : 'default'}} slds-icon slds-icon--small slds-m-left--x-small" @tap.stop="markHeart({{record._id}},{{record.heart}})" /></view> -->
                  </block>
                  <block wx:else>
                    <view class="weui-cell__ft" style="font-size: 36rpx;padding-right: 15px">请答题</view>
                  </block>
                </view>
              </block>
            </repeat>
          </view>
        </block>
        <block wx:else>
          <view class="page cover-page page-else">
            <view class="page__bd">
              <image class="light" src="https://lg-otd9qzs8-1257216007.cos.ap-shanghai.myqcloud.com/light.png"/>
              <text style="display:block;">点击屏幕下方的按钮，</text>
              <text  style="display:block;">邀请好友一起答题，就可以测试缘分啦~</text>
            </view>
          </view>
        </block>
      </block>
      <block wx:else>
        <view class="page-index">
          <view class="page__hd">
            <view class="love-title">我该和谁谈恋爱？</view>
          </view>
          <view class="page__bd">
            <view class="love-summary">根据你的喜好和对方喜好，无颜可以精确计算你与好友的“互相匹配度”，帮你优选恋爱对象。</view>
            <button class="btn-join" @tap="goLove">开始答题</button>
          </view>
        </view>
      </block>
    </view>
    <block wx:if="{{answered}}">
      <view class="tab-bar border-top-1px"> 
        <view wx:if="{{showGoHome}}" class="l l-collect" hover-class='weui-grid_active' @tap="goHome">
          <image class="icon" mode="aspectFit" src="{{ collectBackImage }}"></image>
        </view>
        <!--<button open-type="share" class="btn-toolbar-primary" type="default" plain="true">
          测试好友缘分
        </button>-->
        <button class="btn-toolbar-primary" type="default" plain="true" @tap="goShare">
          测试好友缘分
        </button>
      </view>
    </block>
  </view>
</template>

<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import util from '../../wxs/util.wxs';
import recordList from '../../mixins/record_list';
import { loveSpaceId, baseMaterialUrl, appId } from '@/config';
import pageRouter from '@/utils/pageRouter';
import req from '@/network';
import _ from 'underscore';

export default class Matching extends wepy.page {
  config = {
    navigationBarTitleText: '缘分榜',
    enablePullDownRefresh: true
  };

  data = {
    isAuthUserInfo: false,
    name: '',
    avatar: '',
    match_index: 0,
    object_name: 'love_friends',
    filter: '',
    avatar_field: 'user_b.avatarUrl',
    name_field: 'user_b.name',
    baseUrl: baseUrl,
    navigationBarTitle: '缘分榜',
    date_field: [
      'match',
      'a_to_b',
      'b_to_a',
      'open_group_id',
      'heart',
      'is_looking_for'
    ],
    userId: '',
    share_from: '',
    orderby: 'match desc',
    space_id: null,
    pageSize: 50,
    open_group_id: '',
    answered: false,
    matching_filter_enable: false,
    collectBackImage: '/static/images/ic_menu_choice_nor.png',
    showGoHome:false
  };

  async beforeOnLoad(e) {
    console.log('beforeOnLoad=================', e);
    wx.showNavigationBarLoading();
    e.space_id = loveSpaceId;
    this.space_id = e.space_id;
    if (e.scene) {
      // 朋友圏二维码识别进入的，则取出scene中的share_from
      let scene = decodeURIComponent(e.scene);
      let scenes = scene.split('=');
      e.share_from = scenes[1];
      e.qrcode = 1;
    }
    await this.$parent.login(e);
    const user_id = this.$parent.globalData.user._id;
    if (this.$parent.globalData.user.open_group_id && e.share_from) {
      this.open_group_id = this.$parent.globalData.user.open_group_id;
    } else if (e.open_group_id) {
      this.open_group_id = e.open_group_id;
    } else {
      this.open_group_id = '-1';
    }
    this.userId = user_id;
    this.$apply();
  }

  async onLoad(e) {
    if (e.share_from) {
      this.share_from = e.share_from;
    }
    console.log("getCurrentPages().length============",getCurrentPages().length)
    if(getCurrentPages().length<=1){
      this.showGoHome = true
    }
    this.space_id = loveSpaceId;
    wepy.showShareMenu({
      withShareTicket: true
    });
    this.$apply();
  }

  async onShow() {
    const filterEnable = wepy.getStorageSync('matching_filter_enable');
    this.matching_filter_enable = filterEnable;
    const finishedNaire = wx.getStorageSync('questionnaire_progess');
    if (finishedNaire.length > 0) {
      this.answered = true;
    }
    this.$apply();
  }

  async init() {
    await req.post('/api/mini/vip/friend/answered', {
      space_id: this.space_id,
      rest: true,
      matching_filter_enable: wepy.getStorageSync('matching_filter_enable')
    });
  }

  async dataRefresh() {
    //    this.is_loaded = false;
    wx.showNavigationBarLoading();
    this.$apply();
    this.record_list = [];
    this.allow_load = true;
    this.current_skip = 0;
    await req.post('/api/mini/vip/friend/answered', {
      space_id: this.space_id,
      rest: true,
      matching_filter_enable: wepy.getStorageSync('matching_filter_enable')
    });
    await this.loadRecords();
    this.is_loaded = true;
    this.$apply();
  }

  async loadRecords(searchValue) {
    const skip = this.current_skip;
    const object_name = this.object_name;
    const queryOptions = await this.getQueryOptions(searchValue);
    if (this.allow_load) {
      const result = await this.$parent.query(
        object_name,
        queryOptions,
        this.space_id
      );
      if (result.value) {
        const filterEnable = wepy.getStorageSync('matching_filter_enable');
        let records = [];
        for (let record of result.value) {
          if (this.avatar_field) {
            record[this.avatar_field] = this.getFieldValue(
              this.avatar_field,
              record
            );
          }
          if (record.user_b.name) {
            if (filterEnable) {
              if (record.is_looking_for) {
                records.push(record);
              }
            } else {
              records.push(record);
            }
          }
        }
        this.record_list = this.record_list.concat(records);
      }
      this.current_skip = skip + result.value.length;
      if (this.current_skip === result['@odata.count']) {
        this.allow_load = false;
      }
      this.$apply();
    }
    wx.hideNavigationBarLoading();
    wx.stopPullDownRefresh();
  }

  async getQueryFilter() {
    const user_id = this.$parent.globalData.user._id;
    let filter = `mini_app_id eq '${appId}' and `
    const filterEnable = wepy.getStorageSync('matching_filter_enable');
    if (this.open_group_id === '-1') {
      filter += `(owner eq '${user_id}' and match ge 0)`;
    } else if (this.open_group_id) {
      filter += `(owner eq '${user_id}' and match ge 0 and open_groups eq '${
        this.open_group_id
      }')`;
    } else {
      filter += `(owner eq '${user_id}' and match ge 0)`;
    }
    if (filterEnable) {
      filter += ' and is_looking_for eq true';
    }
    return filter;
  }

  setOpenGroupId(open_group_id) {
    console.log('[setOpenGroupId]', open_group_id)
    this.open_group_id = open_group_id;
    this.filter = this.getQueryFilter();
    this.$apply();
    this.dataRefresh();
  }

  onShareAppMessage(res) {
    const user_id = this.$parent.globalData.user._id;
    console.log('onShareAppMessage', user_id);
    let title = '我们的缘分榜，快来打榜！';
    let path = `/pages/love/matching?space_id=${
      this.space_id
    }&share_from=${user_id}&open_group_id=-1`;
    return {
      title: title,
      path: path
    };
  }

  wxs = {
    util: util
  };

  getFinalExpand() {
    return 'user_b($select=profile,name,avatarUrl)';
  }

  mixins = [recordList];

  methods = {
    goShare() {
      wx.navigateTo({
        url: `/pages/love/share?card=true&space_id=${this.space_id}`
      });
    },
    goHome() {
      wx.switchTab({
        url: `/pages/love/home?space_id=${this.space_id}`
      });
    },
    goTest() {
      const user = this.$parent.globalData.user;
      if (user.name && user.avatar) {
        wx.navigateTo({url: `/pages/love/share?card=true&space_id=${this.space_id}`});
      } else {
        wx.navigateTo({url: `/pages/user_info_login?share=true`})
      }
    },
    async goFilter(event) {
      wx.navigateTo({
        url: `/pages/love/matching_filter`
      });
    },
    async start_answer() {
      const user = this.$parent.globalData.user;
      if (user.name && user.avatar) {
        wx.navigateTo({ url: '/pages/love/cover_answer_questions' });
      } else {
        wx.navigateTo({
          url: `/pages/user_info_login?naire=${this.naire}&share_from=${
            this.share_from
          }&next=${encodeURIComponent(`/pages/love/cover_answer_questions`)}`
        });
      }
    },
    async markHeart(_id, heart, event) {
      wx.showNavigationBarLoading();
      if (event == undefined) {
        event = heart;
        heart = false;
      }
      let values = {
        heart: !heart
      };
      let res = await this.$parent.update(
        'love_friends',
        _id,
        values,
        this.space_id
      );
      if (res) {
        let currentItem = this.record_list.find(item => {
          return item._id == _id;
        });
        currentItem.heart = !heart;
      }
      this.$apply();
      wx.hideNavigationBarLoading();
    },
    goIntroduce(record) {
      if(record.match == undefined){
        return;
      }
      let url=`/pages/love/introduce?_id=${record._id}&object_name=love_friends&space_id=${record.space}&userId=${record.user_b._id}`;
      pageRouter.navigateTo({
        url: url
      });
    },
    goLove() {
      const answeredUrl = encodeURIComponent(`/pages/love/cover_about_yourself?space_id=${this.space_id}`);
      pageRouter.navigateTo({
        url: `/pages/love/papers_view?object_name=love_test&space_id=${this.space_id}&answered_url=${answeredUrl}&answered_url_type=reLaunch&keep_progress`
      });
		},
    userLogin(e) {
      const userInfo = e.detail.userInfo;
      if (userInfo) {
        const name = userInfo.nickName;
        const sex = userInfo.gender ? '男' : '女';
        const avatar = userInfo.avatarUrl;

        this.isAuthUserInfo = true;
        this.avatar = avatar;
        this.name = name;
        this.sex = sex;
        this.$parent.globalData.userInfo = userInfo;
        this.$parent.globalData.user.name = name;
        this.$parent.globalData.user.sex = sex;
        this.$apply();

        const url = '/mini/vip/user';
        req.put(url, { name: name, sex: sex, avatar: avatar }).then(res => {
          pageRouter.navigateTo({ url: '/pages/me_profile' });
        });
      }
    },
    switchGroup() {
      wx.navigateTo({ url: '/pages/love/group' })
    }
  };
}
</script>
