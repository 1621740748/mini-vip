<style lang="less">
page {
  background: #fff;
}
.page {
  display:flex;
  flex-direction:column;
  position:absolute;
  top:0;
  bottom:0;
  left: 0;
  right: 0;

  .body {
    flex: 1;
    overflow: auto;
  }
}
.weui-article__c {
  margin-bottom: 10px;
}

.weui-article {
  padding: 30rpx 30rpx 0;
}

.article-section {
  margin: 0;
  .article-p {
    padding:0 0 0.8em;
    margin: 0;
  }
}

.action-bar {
  display: flex;
  font-size: 13px;
  color: #888;

  .action {
    flex: 1;
    padding:0 30rpx;
    font-size:13px;
    line-height:inherit;
    width:auto;
    height:auto;
    border:none;
    line-height:50px;
    display: flex;
    align-items: center;

    .slds-icon {
      width: 1rem;
      height: 1rem;
      margin-right: 0.25rem;
    }
  }
  .slds-icon {
    display: inline-block;
  }
  .share-btn {
    justify-content: flex-start;
  }
  .comment-btn {
    justify-content: center;
  }
  .star-btn {
    justify-content: flex-end;

    &.is-stared {
      color: #018cc6;
    }
  }
  .text {
    display: inline-block;
  }
}

.image {
  display: block;
  border-radius: 50%;
}
.cover{
  width: 100%;
  height:480rpx;
}
.flex-images-box{
  display: flex;
  flex-flow: row wrap;
  align-content: flex-start;
  .flex-image{
    flex:0 0 32%;
    height:160rpx;
    margin:0 2% 2% 0;
    &.flex-image-last{
      margin-right: 0;
    }
  }
}
.slide-image{
  width: 100%;
  height:480rpx;
}
video{
  width:100%;
}

.tab-bar {
  display: flex;
  box-sizing: border-box;
  z-index: 500;
  bottom: 0;
  height: auto;
  width: 100%;
  background-color: #F7F7FA;
  align-items: center;
  padding: 15px;

  .avatar {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    overflow: hidden;
  }

  form {
    width: 100%;
  }

  .form {
    display: flex;
    flex: 1;
    align-items: center;
    .comment {
      flex: 1;
      width: auto;
      padding: 0 10px;
    }
    .submit-btn {
      color: #018cc6;
      border: none;
      margin: 0;
      padding: 0;
      line-height: inherit;
      width: auto;
      font-size: inherit;
    }
  }
}

.comment-area {
  padding-bottom:10px;
  .comment-title {
    padding: 10px 15px;
  }
  .comment-container {
    padding: 10px 15px 0;
    display: flex;

    .avatar-container {
      width: 30px;
      .avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
      }
    }
    .detail-container {
      flex: 1;
      margin-left: 10px;
      padding-bottom: 10px;

      .user-name {
        height: 30px;
        line-height: 30px;
      }
    }
  }
}
</style>
<template>
<view class="page border-top-1px" wx:if="{{is_loaded}}">
  <view class="body">
    <scroll-view scroll-y style="height: 100%;" bindscrolltolower="lower">
      <navigator class="post-header" url="../space/index?space_id={{space_id}}">
        <view class="weui-cell weui-cell_access">
          <view class="weui-cell__hd">
            <image wx:if="{{avatar}}" class="image slds-icon slds-icon--small slds-m-right--x-small" src="{{util.formatImageUrl(avatar, baseUrl)}}"></image>
            <view wx:else class="slds-icon-standard-channel-programs slds-icon slds-icon--small slds-m-right--x-small"></view>
          </view>
          <view class="weui-cell__bd">
            {{space_name}}
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </view>
      </navigator>
      <block wx:if="{{post.video}}">
        <video src="{{post.video_url}}" objectFit="contain" class="cover"  direction= '90' custom-cache="{{false}}"></video>
      </block>
      <block wx:elif="{{post.images && post.images.length == 1}}">
        <image src="{{util.formatImageUrl(post.images[0], baseUrl)}}" mode="aspectFill" @tap="previewImage({{item}})" class="cover"/>
      </block>
      <view class="weui-article">
        <view class="weui-article__section article-section">
          <view class="weui-article__c" wx:if="{{post.images && post.images.length>1 && !post.video}}">
            <view class="flex-images-box">
              <repeat for="{{post.images}}" key="index" index="index" item="item">
                <image src="{{util.formatImageUrl(item, baseUrl)}}" mode="aspectFill" @tap="previewImage({{item}})" class="flex-image {{(index + 1)%3 > 0 ? 'flex-image-item' : 'flex-image-last'}}"/>
              </repeat>
            </view>
          </view>
          <view class="weui-article__h1">{{post.name}}</view>
          <view class="weui-article__p article-p border-bottom-1px">
            <text space="emsp">{{post.description}}</text>
          </view>
        </view>
      </view>
      <view class="action-bar border-bottom-1px">
        <button plain="true" open-type="share" data-post-name="{{post.name}}" data-post-id="{{post._id}}" data-post-space="{{post.space}}" class="share action share-btn">
          <view class="vip_share-default slds-icon slds-icon--small slds-m-right--x-small"></view>
          <view class="text">转发</view>
        </button>
        <view class="comment-btn action">
          <view class="vip_comment-default slds-icon slds-icon--small slds-m-right--x-small"></view>
          <view class="text">评论</view>
        </view>
        <view class="star action star-btn {{star_id ? 'is-stared' : ''}}" @tap="starPost">
          <view class="vip_star-{{star_id ? 'blue' : 'default'}} slds-icon slds-icon--small slds-m-right--x-small"></view>
          <view class="text">{{post.star_count || 0}}</view>
        </view>
      </view>
      <view class="comment-area">
        <view class="comment-title">
          评论({{post_comments.length}})
        </view>
        <repeat for="{{post_comments}}" key="index" index="index" item="comment">
          <view class="comment-container">
            <view class="avatar-container">
              <image class="avatar" mode="aspectFill" src="{{comment.owner.profile.avatar}}"></image>
            </view>
            <view class="detail-container border-bottom-1px">
              <view class="user-name">{{comment.owner.name}}</view>
              <view class="comment-detail">{{comment.name}}</view>
            </view>
          </view>
        </repeat>
      </view>
    </scroll-view>
  </view>
  <view class="tab-bar user-comment border-top-1px">
    <view class="avatar">
      <open-data type="userAvatarUrl"></open-data>
    </view>
    <form bindsubmit="submitComment">
      <view class="form">
        <textarea class="comment" name="comment" value="{{value}}" show-confirm-bar="false" cursor-spacing="15" fixed="true" auto-height placeholder="说点什么..." placeholder-style="font-size:red;"/>
        <button form-type="submit" class="submit-btn" plain="true"> 发布 </button>
      </view>
    </form>
  </view>
</view>
</template>
<script>
import wepy from 'wepy';
import req from '@/network';
import { baseUrl } from '@/config';
import util from '../../wxs/util.wxs';

export default class PostView extends wepy.page {
  config = {
    navigationBarTitleText: '',
    enablePullDownRefresh: true
  };

  async onLoad(e) {
    this.editable = e.editable;
    wepy.showLoading({
      title: '加载中',
      mask: true
    });
    if(e.space_id){
      this.$parent.globalData.space_id = e.space_id;
      await this.$parent.login(e.space_id);

      const options = {
        $filter: `_id eq '${e.space_id}'`,
        $expand: 'space($select=name)',
        $count: true,
        $select: 'avatar,space'
      }
      const res = await this.$parent.query('vip_store', options, 'guest')

      if (res.value[0]) {
        this.space_name = res.value[0].space.name
        this.avatar = res.value[0].avatar
      }
    }
    if(e.post_id){
      this.post_id = e.post_id;
      await this.loadPost();
      await this.isPostStar();
      await this.loadPostComments()
    }

    this.is_loaded = true
    this.$apply()
    wepy.hideLoading();
  }

  async refresh(action) {
    if(action == "remove"){
      this.goBackAfterRemove();
      return;
    }
    await this.loadPost();
    await this.loadPostComments();
    wepy.stopPullDownRefresh();
  }

  async loadPostComments() {
    const post_id = this.post_id;
    const options = {
      $filter: `post_id eq '${post_id}'`,
      $count: true,
      $expand: 'owner($select=profile,name)'
    };
    const result = await this.$parent.query('post_comments', options, 'guest');
    if (result && result.value) {
      this.post_comments = result.value;
      this.$apply()
    }
  }

  async loadPost(){
    var post = await this.$parent.get("post", this.post_id)
    this.post = post;
    this.space_id = post.space;
    this.$apply();
  };

  async isPostStar() {
    const user = this.$parent.globalData.user._id;
    const post_id = this.post_id;
    const space_id = this.space_id;
    const options = {
      $filter: `user eq '${user}' and star_post eq '${post_id}'`
    };
    const result = await this.$parent.query('user_star', options, space_id);
    if (result && result.value && result.value[0]) {
      console.log('isSpaceStar..............')
      this.star_id = result.value[0]._id;
      this.$apply();
    }
  }

  goBackAfterRemove() {
    const pages = getCurrentPages();
    const prevPage = pages[pages.length - 3];
    if (prevPage.refresh) {
      prevPage.refresh()
    }
    wepy.navigateBack({
      delta: 1
    })
  }

  // 分享
  onShareAppMessage(res) {
    const post_name = this.post.name
    return {
      title: post_name,
      path: `pages/post/view?space_id=${this.space_id}&post_id=${this.post._id}`
    };
  }

  // 上拉刷新
  onPullDownRefresh() {
    this.refresh();
  }

  data = {
    post_id: null,
    indicatorDots: true,
    autoplay: true,
    interval: 5000,
    duration: 1000,
    post: null,
    baseUrl: baseUrl,
    space_id: '',
    space_name: '',
    avatar: '',
    is_loaded: false,
    editable: false,
    star_id: '',
    value: '',
    post_comments: []
  };

  wxs = {
    util: util
  };

  methods = {
    lower(){
      console.log("lower....................")
    },
    previewImage(image, event){
      var baseUrl = this.baseUrl;
      var current = `${baseUrl}/api/files/images/${image}`;
      var urls = this.post.images.map((n)=>{
        return  `${baseUrl}/api/files/images/${n}`;
      });
      wx.previewImage({
        current: current,
        urls: urls
      });
    },
    editPost() {
      let url = `/pages/record/edit?action=edit&object_name=post&record_id=${this.post_id}&fields=name,summary,description,images,video,type`;
      wepy.navigateTo({
        url: url
      });
    },
    async starPost() {
      const space_id = this.space_id;
      const post_id = this.post_id;
      const user = this.$parent.globalData.user._id;
      const data = {
        user: user,
        star_post: post_id,
        owner: user
      }
      if (this.star_id) {
        await this.$parent.delete('user_star', this.star_id, space_id);
        this.star_id = ''
      } else {
        const result = await this.$parent.insert('user_star', data, space_id)
        if (result.value && result.value.length) {
          this.star_id = result.value[0]._id;
        }
      }
      const post = await this.$parent.get('post', this.post._id, this.post.space);
      this.post = post;
      this.$apply()
    },
    async submitComment(e) {
      const comment = e.detail.value.comment;
      const space_id = this.space_id;
      if (comment) {
        const data = {
          name: comment,
          post_id: this.post_id
        }
        await this.$parent.insert('post_comments', data, space_id);
        await this.loadPostComments();
        this.setData({
          value : ''
        });
      }
    }
  };
}
</script>
