<style lang="less">
.weui-article__h1{
  text-align: center;
}
.cover{
  width: 100%;
  height:480rpx;
}
.flex-images-box{
  display: flex;
  flex-flow: row wrap;
  align-content: flex-start;
  .flex-image{
    flex:0 0 32%;
    height:160rpx;
    margin:0 2% 2% 0;
    &.flex-image-last{
      margin-right: 0;
    }
  }
}
.slide-image{
  width: 100%;
  height:480rpx;
}
video{
  width:100%;
}


.tab-bar {
  display: flex;
  position: fixed;
  z-index: 500;
  bottom: 0;
  height: 50px;
  width: 100%;
  background-color: #F7F7FA;
  justify-content: center;
  align-items: center;

  &::before {
    content: " ";
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    height: 1px;
    border-top: 1px solid #C0BFC4;
    color: #C0BFC4;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5);
  }

  .btn-edit {
    height: 35px;
    width: 35px;
    background: #ffa325;
    text-align: center;
    color: #fff;
    border: 10px;
    border-radius: 50%;

    .ion {
      line-height: 35px;
      font-weight: bold;
      font-size: 16px;
    }
  }
}
</style>
<template>
<view class="page" wx:if="{{is_loaded}}">
  <view class="page__bd">
    <block wx:if="{{post.video}}">
      <video src="{{util.formatVideoUrl(post.video, baseUrl)}}" controls objectFit="contain" class="cover"  direction= '90' page-gesture="{{true}}" autoplay="{{false}}"></video>
    </block>
    <block wx:elif="{{post.images && post.images.length}}">
      <image src="{{util.formatImageUrl(post.images[0], baseUrl)}}" mode="aspectFill" @tap="previewImage({{item}})" class="cover"/>
    </block>
    <view class="weui-article">
      <view class="weui-article__h1">{{post.name}}</view>
      <view class="weui-article__section">
        <view class="weui-article__section">
          <view class="weui-article__p">
            <text space="emsp">{{post.description}}</text>
          </view>
          <view class="weui-article__c">
            <block wx:if="{{post.images&& post.images.length>1}}">
              <view class="flex-images-box">
                <repeat for="{{post.images}}" key="index" index="index" item="item">
                  <image src="{{util.formatImageUrl(item, baseUrl)}}" mode="aspectFill" @tap="previewImage({{item}})" class="flex-image {{(index + 1)%3 > 0 ? 'flex-image-item' : 'flex-image-last'}}"/>
                </repeat>
              </view>
            </block>
            <block wx:elif="{{post.video&&post.images.length == 1}}">
              <view class="flex-images-box">
                <repeat for="{{post.images}}" key="index" index="index" item="item">
                  <image src="{{util.formatImageUrl(post.images[0], baseUrl)}}" mode="aspectFill" @tap="previewImage({{item}})"/>
                </repeat>
              </view>
            </block> 
          </view>
        </view>
      </view>
    </view>
  </view>
  <view class="tab-bar" wx:if="{{editable}}">
    <view class="btn-edit" @tap="editPost">
      <view class="slds-icon-edit ion"></view>
    </view>
  </view>
</view>
</template>
<script>
import wepy from 'wepy';
import req from '@/network';
import { baseUrl } from '@/config';
import util from '../../wxs/util.wxs';

export default class PostView extends wepy.page {
  config = {
    navigationBarTitleText: '',
    enablePullDownRefresh: true
  };

  async onLoad(e) {
    this.editable = e.editable;
    wepy.showLoading({
      title: '加载中',
      mask: true
    });
    if(e.space_id){
      this.$parent.globalData.space_id = e.space_id;
      await this.$parent.login(e.space_id);
    }
    if(e.post_id){
      this.post_id = e.post_id;
      this.loadPost();
    }

    this.is_loaded = true
    this.$apply()
    wepy.hideLoading();
  }

  async refresh(action) {
    if(action == "remove"){
      this.goBackAfterRemove();
      return;
    }
    await this.loadPost();
    wepy.stopPullDownRefresh();
  }

  async loadPost(){
    var post = await this.$parent.get("post", this.post_id)
    this.post = post;
    this.space_id = post.space;
    this.$apply();
  };

  goBackAfterRemove() {
    const pages = getCurrentPages();
    const prevPage = pages[pages.length - 3];
    if (prevPage.refresh) {
      prevPage.refresh()
    }
    wepy.navigateBack({
      delta: 1
    })
  }

  // 分享
  onShareAppMessage(res) {
    const post_name = this.post.name
    return {
      title: post_name,
      path: `pages/post/view?space_id=${this.space_id}&post_id=${this.post._id}`
    };
  }

  // 上拉刷新
  onPullDownRefresh() {
    this.refresh();
  }

  data = {
    post_id: null,
    indicatorDots: true,
    autoplay: true,
    interval: 5000,
    duration: 1000,
    post: null,
    baseUrl: baseUrl,
    space_id: '',
    is_loaded: false,
    editable: false
  };

  wxs = {
    util: util
  };

  methods = {
    previewImage(image, event){
      var baseUrl = this.baseUrl;
      var current = `${baseUrl}/api/files/images/${image}`;
      var urls = this.post.images.map((n)=>{
        return  `${baseUrl}/api/files/images/${n}`;
      });
      wx.previewImage({
        current: current,
        urls: urls
      });
    },
    editPost() {
      let url = `/pages/record/edit?action=edit&object_name=post&record_id=${this.post_id}&fields=name,summary,description,images,video,type`;
      wepy.navigateTo({
        url: url
      });
    }
  };
}
</script>
