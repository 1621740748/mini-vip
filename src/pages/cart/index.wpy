<style lang="less" scoped>
	view,image,text,navigator,input {
		box-sizing: border-box;
	}
  page{
    height: 100%;
    min-height: 100%;
  }
  .container{
    width: 100%;
    height: auto;
    min-height: 100%;
    overflow: hidden;
  }
  .service-policy{
    width: 750rpx;
    height: 73rpx;
    background: #f4f4f4;
    padding: 0 31.25rpx;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
  }

  .service-policy .item{
    background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/servicePolicyRed-518d32d74b.png) 0 center no-repeat;
    background-size: 10rpx;
    padding-left: 15rpx;
    display: flex;
    align-items: center;
    font-size: 25rpx;
    color: #666;
  }

  .no-cart{
    width: 100%;
    height: auto;
    margin: 0 auto;
  }

  .no-cart .c{
    width: 100%;
    height: auto;
    margin-top: 200rpx;
  }

  .no-cart .c image{
    margin: 0 auto;
    display: block;
    text-align: center;
    width: 258rpx;
    height: 258rpx;
  }

  .no-cart .c text{
    margin: 0 auto;
    display: block;
    width: 258rpx;
    height: 29rpx;
    line-height: 29rpx;
    text-align: center;
    font-size: 29rpx;
    color: #999;
  }


  .cart-view{
    width: 100%;
    height: auto;
    overflow: hidden;

  }

  .cart-view .list{
    height: auto;
    width: 100%;
    overflow: hidden;
    margin-bottom: 120rpx;
  }

  .cart-view .group-item{
    height: auto;
    width: 100%;
    background: #fff;
    margin-bottom: 18rpx;
  }

  .cart-view .item{
    display: flex;
    width: 100%;
    align-items: stretch;
    position: relative;
    .check-img {
      height: 34rpx;
      width: 34rpx;
    }
  }
  .cart-view .item .checkbox{
    display: flex;
    align-content: center;
    align-items: center;
    width: 34rpx;
    padding: 0 31.25rpx;
    box-sizing: content-box;
    .check-img {
      background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/checkbox-0e09baa37e.png) no-repeat;
      background-size: 34rpx;
    }
  }

  .cart-view .item .checkbox.checked{
    .check-img {
      background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/checkbox-checked-822e54472a.png) no-repeat;
      background-size: 34rpx;
    }
  }

  .cart-view .item {
    transition: all 0.2s linear;
    .delete {
      position: absolute;
      width: 60px;
      background: #b4282d;
      color: #fff;
      display: flex;
      align-items: center;
      justify-content:center;
      height: 100%;
      right: 0;
      top: 0;
      transform: translateX(60px);
    }
  }

  .cart-view .item .cart-goods{
    flex: 1;
		display: flex;
    float: left;
    border-bottom: 1px solid #f4f4f4;
  }

  .cart-view .group-item .item:last-of-type {
    .cart-goods {
      border-bottom: none;
    } 
  }

  .cart-view .item .img{
    float: left;
    height: 150rpx;
    width: 150rpx;
    background: #f4f4f4;
    margin: 19.5rpx 18rpx 19.5rpx 0;
  }

  .cart-view .item .info{
		flex: 1;
    float: left;
    height: auto;
    margin: 19.5rpx 31.25rpx 19.5rpx 0;
  }

  .cart-view .item .t{
    display: flex;
    margin: 8rpx 0;
    font-size: 30rpx;
    color: #333;
    overflow: hidden;
    align-items:center;
  }


  .cart-view .item .name{
    flex: 1;
    font-size: 30rpx;
    color: #333;
    overflow:hidden;
    text-overflow:ellipsis;
    display: -webkit-box!important;
    -webkit-line-clamp:2;
    -webkit-box-orient:vertical;
    margin-bottom:10rpx;
    line-height:45rpx;
  }

  .cart-view .item .num{
    float: right;
    font-weight: bold;
    padding-left: 20rpx;
  }

  .cart-view .item .attr{
    margin-bottom: 17rpx;
    height: 24rpx;
    line-height: 24rpx;
    font-size: 22rpx;
    color: #666;
    overflow: hidden;
    word-break: break-all;
  }

  .cart-view .item .b{
		display: flex;
    font-size: 25rpx;
    color: #333;
  }

  .cart-view .item .price{
		flex: 1;
    line-height: 57rpx;
    font-size: 34rpx;
  }
	
  .cart-view .item .selnum{
    width: 235rpx;
    height: 57rpx;
    // border: 1rpx solid #686868;
		display: flex;
		
		view, input {
			display:flex;
			justify-content:center;
			align-items:center;
		}
  }

  .selnum .cut{
    font-size: 30rpx;
    width: 70rpx;
    height: 100%;
		text-align: center;
		height: 55rpx;
    line-height: 55rpx;
    color:#aaa;
		border: 1rpx solid #aaa;

		&.disabled {
			border-color: #aaa;
			border-right-color: #aaa;
		}
  }

  .selnum .number{
    flex: 1;
    font-size: 30rpx;
    height: 100%;
		text-align: center;
    height: 55rpx;
    min-height: 55rpx;
    line-height: 55rpx;
    border-top: 1rpx solid #aaa;
    border-bottom: 1rpx solid #aaa;
    float: left;
  }

  .selnum .add{
    font-size: 30rpx;
    width: 80rpx;
    height: 100%;
		text-align: center;
		height: 55rpx;
    line-height: 55rpx;
    color:#bbb;
		border: 1rpx solid #aaa;
  }


  .cart-view .group-item .header{
    width: 100%;
    height: 94rpx;
    line-height: 94rpx;
    padding: 0 26rpx;
    border-bottom: 1px solid #f4f4f4;
  }

  .cart-view .promotion .icon{
    display: inline-block;
    height: 24rpx;
    width: 15rpx;
  }

  .cart-view .promotion{
    margin-top: 25.5rpx;
    float: left;
    height: 43rpx;
    width: 480rpx;
    /*margin-right: 84rpx;*/
    line-height: 43rpx;
    font-size: 0;
  }

  .cart-view .promotion .tag{
    border: 1px solid #f48f18;
    height: 37rpx;
    line-height: 31rpx;
    padding: 0 9rpx;
    margin-right: 10rpx;
    color: #f48f18;
    font-size: 24.5rpx;
  }

  .cart-view .promotion .txt{
    height: 43rpx;
    line-height: 43rpx;
    padding-right: 10rpx;
    color: #333;
    font-size: 29rpx;
    overflow: hidden;
  }

  .cart-view .get{
    margin-top: 18rpx;
    float: right;
    height: 58rpx;
    padding-left: 14rpx;
    border-left: 1px solid #d9d9d9;
    line-height: 58rpx;
    font-size: 29rpx;
    color: #333;
  }

  .cart-bottom{
    position: fixed;
    bottom:0;
    left:0;
    height: 100rpx;
    width: 100%;
    background: #fff;
    display: flex;
    font-size: 30rpx;
    align-items: center;
    align-content: center;
    .text{
      font-size: 32rpx;
    } 
    .checkbox {
      display: flex;
      box-sizing: content-box;
      height: 100%;
      padding-left: 31.25rpx;
      align-items: center;
      align-content: center;
      .check-img {
        width: 34rpx;
        height: 34rpx;
        box-sizing: content-box;
        padding-right: 30rpx;
      }
    }
  }

  .cart-bottom .checkbox{
    .check-img {
      background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/checkbox-0e09baa37e.png) no-repeat;
      background-size: 34rpx;
    }
  }

  .cart-bottom .checkbox.checked{
    .check-img {
      background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/checkbox-checked-822e54472a.png) no-repeat;
      background-size: 34rpx;
    }
  }

  .cart-bottom .total{
    font-size: 34rpx;
    font-weight: bold;
    color:#b4282d;
    flex: 1;
    text-align: right;
    margin-right: 35rpx;
  }

  .cart-bottom .delete{
    height: 34rpx;
    width: auto;
    margin: 33rpx 18rpx;
  }

  .cart-bottom .checkout{
    height: 100%;
    font-size: 32rpx;
    line-height: 100rpx;
    width: 210rpx;
    text-align: center;
    background: #b4282d;
    color: #fff;
    &.disabled {
      background: #b2b2b2;
    }
  }
</style>
<template>
  <view class="container" wx:if="{{!is_loaded}}">
    <view class="service-policy">
      <view class="item">30天无忧退货</view>
      <view class="item">48小时快速退款</view>
      <view class="item">满88元免邮费</view>
    </view>
    <view class="no-cart" wx:if="{{cartList.length <= 0}}">
      <view class="c">
        <image src="http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/noCart-a8fe3f12e5.png" />
        <text>去添加点什么吧</text>
      </view>
    </view>
    <view class="cart-view" wx:if="{{cartList.length > 0}}">
      <view class="list">
        <view class="group-item">
          <view class="goods">
						<repeat for="{{cartList}}" key="index" index="index" item="goods">
							<view class="item" @tap="viewDetail" style="transform: translateX({{styleList[goods._id].offsetX}}px)" @touchstart="touchstart" @touchmove="touchmove" @touchend="touchend" data-item-id="{{goods._id}}" data-item-space="{{goods.space}}">
                <view class="checkbox {{goods.checked ? 'checked' : ''}}" @tap.stop="checkedItem" data-item-id="{{goods._id}}">
                  <view class="check-img" data-item-id="{{goods._id}}"></view>
                </view>
								<view class="cart-goods">
									<image class="img" src="{{util.formatImageUrl(goods.avatar, baseUrl)}}" mode="aspectFill"></image>
									<view class="info">
										<view class="t">
											<text class="name">{{goods.name}}</text>
											<!-- <text class="num">x{{goods.count}}</text> -->
										</view>
										<view class="b">
											<text class="price">￥{{goods.default_price}}</text>
											<view class="selnum">
												<view class="cut {{goods.count > 1 ? 'enabled' : 'disabled'}}" @tap.stop="cutNumber" data-item-id="{{goods._id}}">-</view>
												<input value="{{goods.count}}" class="number" data-target="input" data-item-id="{{goods._id}}" type="number" bindblur="updateNumber"/>
												<view class="add" @tap.stop="addNumber" data-item-id="{{goods._id}}">+</view>
											</view>
										</view>
									</view>
								</view>
                <view class="delete" @tap.stop="delete" data-item-id="{{goods._id}}">
                  删除
                </view>
							</view>
						</repeat>
          </view>
        </view>
      </view>
      <view class="cart-bottom">
        <view class="checkbox {{isCheckedAll ? 'checked' : ''}}" @tap="checkedAll">
          <view class="check-img"></view>
        </view>
        <view class="text">全选({{checkedProductCount}})</view>
        <view class="total">{{'￥'+checkedProductAmount}}</view>
        <!-- <view class="delete" @tap="editCart">{{!isEditCart ? '编辑' : '完成'}}</view> -->
        <!-- <view class="checkout" @tap="deleteCart" wx:if="{{isEditCart}}">删除所选</view> -->
        <view class="checkout {{checkedProductCount ? '' : 'disabled'}}" @tap="checkoutOrder">下单</view>
      </view>
    </view>
  </view>
</template>

<script>
	import wepy from 'wepy'
	import { connect, getStore } from 'wepy-redux'
	import _ from 'underscore'
	import util from '../../wxs/util.wxs'
	import { baseUrl } from '@/config'
	
	const store = getStore()

	@connect({
    cartList(state) {
      return state.counter.cartList;
    }
  })

  export default class Cart extends wepy.page {
    config = {
			navigationBarTitleText: '购物车',
      backgroundColor: '#f4f4f4'
		}
		
    data = {
			baseUrl: baseUrl,
			is_loaded: true,
      styleList: {},
      cartTotal: {
        'goodsCount': 0,
        'goodsAmount': 0.00,
        'checkedGoodsCount': 0,
        'checkedGoodsAmount': 0.00
      },
      isEditCart: false,
      checkedAllStatus: true,
      editCartList: []
		}
		
    async onLoad() {
			wepy.showLoading({
				title: '加载中',
				mask: true
			});
			await this.$parent.login()
			const store = getStore()
			// cartList是数组，需要clone，避免修改
			const products = _.clone(this.cartList);
			const newList = await this.getProductInfo(products);
      this.styleList = this.initStyleList(newList);
			store.dispatch({type: 'UPDATE_PRODUCT_INFO', payload: newList});
      this.is_loaded = false;
			this.$apply()
      wepy.hideLoading();
		}

		wxs = {
			util: util
		}

    initStyleList(cartList) {
      let styleList = {};
      for (let p of cartList) {
        styleList[p._id] = {positionX: 0, offsetX: 0}
      }
      return styleList
    }

		async getProductInfo (products) {
			for (let p of products) {
				const options = {
					$filter: `_id eq '${p._id}'`,
					$select: 'name,default_price,compared_price,description,covers,images,avatar,categories,tags,vendor,status,space'
				};
				let product_info = await this.$parent.query('vip_product', options, 'guest');
				if (product_info && product_info.value && product_info.value[0]) {
					product_info = product_info.value[0];
					delete product_info['@odata.editLink'];
					delete product_info['@odata.etag'];
					delete product_info['@odata.id'];
				}
				p = _.extend(p, product_info);
			}
			return products
		}
   
    computed = {
      isCheckedAll() {
        const cartList = store.getState().counter.cartList;
        return cartList.every(function (element, index, array) {
          if (element.checked === true) {
            return true
          } else {
            return false
          }
        })
      },
      checkedProductCount() {
        const cartList = store.getState().counter.cartList;
        let checkedProductCount = 0;
        if (cartList && cartList.constructor === Array) {
          cartList.forEach(p => {
            p.checked ? checkedProductCount += p.count : checkedProductCount
          });
        }
        return checkedProductCount
      },
      checkedProductAmount() {
        const cartList = store.getState().counter.cartList;
        let checkedProductAmount = 0.00;
        if (cartList && cartList.constructor === Array) {
          cartList.forEach(p => {
            p.checked ? checkedProductAmount += (p.default_price * p.count) : checkedProductAmount
          });
        }
        return checkedProductAmount.toFixed(2)
      }
    }
    methods = {
      checkedItem(event) {
        const itemId = event.target.dataset.itemId;
        store.dispatch({type: 'CHECK_PRODUCT', payload: itemId});
      },
      checkedAll() {
				const isCheckedAll = this.computed.isCheckedAll();
				store.dispatch({type: 'CHECK_ALL_PRODUCT', payload: !isCheckedAll});
      },
      cutNumber(event) {
    		const itemId = event.target.dataset.itemId;
        store.dispatch({type: 'DECREASE_PRODUCT', payload: itemId});
      },
      addNumber(event) {
				const itemId = event.target.dataset.itemId;
        store.dispatch({type: 'ADD_PRODUCT', payload: {_id: itemId, count: 1}});
      },
      updateNumber(event) {
        const itemId = event.target.dataset.itemId;
        const count = parseInt(event.detail.value);
        store.dispatch({type: 'UPDATE_PRODUCT_COUNT', payload: {operation:'update', product: {_id: itemId, count: count}}})
      },
      checkoutOrder() {
        if (this.checkedProductCount) {
          wepy.navigateTo({
            url: './checkout'
          })
        }
      },
      viewDetail(event) {
        const itemId = event.currentTarget.dataset.itemId;
        const spaceId = event.currentTarget.dataset.itemSpace;
        const target = event.target.dataset.target;
        if (!target) {
          wepy.navigateTo({
            url: `../product/view?record_id=${itemId}&space_id=${spaceId}`
          })
        }
      },
      touchstart(event) {
        const itemId = event.currentTarget.dataset.itemId;
        const positionX = event.touches[0].pageX;
        this.styleList[itemId] = {}
        this.styleList[itemId].positionX = positionX;
        this.$apply();
      },
      touchmove(event) {
        const itemId = event.currentTarget.dataset.itemId;
        const newPositionX = event.touches[0].pageX;
        const oldPositionX = this.styleList[itemId].positionX;
        const oldOffsetX = this.styleList[itemId].offsetX;
        const offsetX = newPositionX - oldPositionX;

        let newStyleList = {};
        newStyleList[itemId] = this.styleList[itemId];
        this.styleList = newStyleList;

        if (offsetX < 0) {
          if (oldOffsetX < 0 && oldOffsetX < offsetX) {
            this.styleList[itemId].offsetX = -60 + offsetX;
          } else {
            this.styleList[itemId].offsetX = offsetX;
          }
        } else if (offsetX > 0) {
          this.styleList[itemId].offsetX = 10;
        }
        this.$apply();
      },
      touchend(event) {
        const itemId = event.currentTarget.dataset.itemId;
        let offsetX = this.styleList[itemId].offsetX
        if ((-60 < offsetX && offsetX < -30) || offsetX < -60) {
          offsetX = -60;
        } else {
          offsetX = 0;
        }
        this.styleList[itemId].positionX = 0;
        this.styleList[itemId].offsetX = offsetX;
        this.$apply();
      },
      delete(event) {
        const itemId = event.currentTarget.dataset.itemId;
        console.log('delete', itemId)
        store.dispatch({type: 'DELETE_PRODUT', payload: itemId});
      }
    }
  }
</script>
