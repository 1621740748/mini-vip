<style lang="less">
.product-list {
  .image {
    display: block;
  }
  .page__bd {
    padding-bottom: 100rpx;
  }
  .tab-bar {
    display: flex;
    position: fixed;
    z-index: 500;
    bottom: 0;
    height: 100rpx;
    width: 100%;
    padding: 10rpx 15rpx;
    box-sizing: border-box;
    background-color: #f7f7fa;

    &::before {
      content: ' ';
      position: absolute;
      left: 0;
      top: 0;
      right: 0;
      height: 1px;
      border-top: 1px solid #c0bfc4;
      color: #c0bfc4;
      -webkit-transform-origin: 0 0;
      transform-origin: 0 0;
      -webkit-transform: scaleY(0.5);
      transform: scaleY(0.5);
    }

    .action {
      flex: 1;
      display: flex;
      flex-direction: column;
      text-align: center;
      justify-content: space-between;
      .slds-icon {
        width: 44rpx;
        height: 44rpx;
        margin: 0 auto;
        position: relative;
      }
      .cart-count {
        height: 28rpx;
        width: 28rpx;
        z-index: 10;
        position: absolute;
        top: -4rpx;
        right: -10rpx;
        background: #b4282d;
        text-align: center;
        font-size: 18rpx;
        color: #fff;
        line-height: 28rpx;
        border-radius: 50%;
      }

      .text {
        font-size: 24rpx;
      }

      .ion {
        width: 100%;
        height: 100%;
      }
    }
  }

  .item-body {
    width: 55%;
  }

  .description-field {
    text-overflow: ellipsis;
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    font-size: 26rpx;
    color: #888888;
  }

  .name-field {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    flex: 1;
    min-height: 48rpx;
  }

  .date-field {
    font-size: 26rpx;
    color: #888888;
  }

  .item-body-1 {
    display: flex;
    align-items: center;
  }

  .page__hd {
    padding: 0px;
  }

  .weui-search-bar {
    border-bottom: 0px;
    padding: 16rpx 15rpx;
  }

  .avatar-field {
    border-radius: 0.15rem;
    margin-right: 10rpx;
    vertical-align: middle;
    width: 80rpx;
    height: 80rpx;
  }

  .zan-tab {
    scroll-view {
      border: none;
    }
  }
  .image {
    display: block;
    height: 180px;
    width: 100%;
  }

  .zan-tab__bd {
    width: 750rpx;
    display: flex;
    flex-direction: row;
    border-bottom: 1rpx solid #e5e5e5;
    background: #fff;
  }

  .zan-tab__bd--fixed {
    position: fixed;
    top: 0;
    z-index: 2;
  }

  .zan-tab__item {
    flex: 1;
    display: inline-block;
    padding: 0 10px;
    line-height: 0;
    box-sizing: border-box;
    text-align: center;
  }

  .zan-tab__title {
    display: inline-block;
    max-width: 100%;
    height: 88rpx;
    line-height: 88rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    box-sizing: border-box;
    word-break: keep-all;
    font-size: 28rpx;
    color: #666;
  }

  .zan-tab__item--selected .zan-tab__title {
    color: #018cc6;
    border-bottom: 2px solid#018cc6;
  }

  .zan-tab__bd--scroll {
    // display: block;
    white-space: nowrap;
  }
}

page {
  background-color: #fff;
}
</style>

<template>
  <view class="page product-list" wx:if="{{is_loaded}}">
    <view >
      <scroll-view  scroll-x="true">
        <view style="display: flex">
        <repeat for="{{categories}}" key="index" index="index" item="item">
          <view class="zan-tab__item {{item._id == seleted_id ? 'zan-tab__item--selected' : ''}}"   @tap="changeCategory({{item._id}})" style="flex:1; white-space: nowrap;padding: 0 10px; text-align:center" > 
            <view class="zan-tab__title">{{ item.name }}</view>
          </view>
        </repeat>
        </view>
      </scroll-view>
    </view>
    <view class="page__hd">
      <searchbar :placeholder.sync="searchPlaceholder" @confirm.user="searchRecords" />
    </view>
    <view class="page__bd">
      <productGridList :list.sync="record_list"></productGridList>
    </view>
    <view class="tab-bar">
      <view class="comment-btn action">
        <view class="slds-icon slds-icon--small slds-m-right--x-small">
          <image class="ion" src="/static/images/ic_menu_sort_nor.png"></image>
        </view>
        <view class="text">分类</view>
      </view>
      <view class="cart-btn action" @tap="checkout">
        <view class="slds-icon slds-icon--small slds-m-right--x-small">
          <text class="cart-count" wx:if="{{getProductCount}}">{{getProductCount}}</text>
          <image class="ion" src="/static/images/ic_menu_shoping_nor.png"></image>
        </view>
        <view class="text">购物车</view>
      </view>
      <view class="my-btn action" @tap="viewOrder">
        <view class="slds-icon slds-icon--small slds-m-right--x-small">
          <image class="ion" src="/static/images/ic_menu_me_nor.png"></image>
        </view>
        <view class="text">我的</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import { baseUrl } from '@/config';
import util from '../../wxs/util.wxs';
import { connect, getStore } from 'wepy-redux';
import searchbar from '../../components/searchbar';
import recordList from '../../mixins/record_list';
import productGridList from '@/components/product_grid_list';

const store = getStore()

@connect({
  cartList(state) {
    return state.counter.cartList;
  }
})

export default class ProductList extends wepy.page {
  config = {
    navigationBarTitleText: '',
    enablePullDownRefresh: true
  };

  data = {
    pageSize: 10,
    categories: [],
    filter: '',
    object_name: 'vip_product',
    fields: [
      'name',
      'default_price',
      'compared_price',
      'avatar',
      'vendor',
      'categories'
    ],
    seleted_id: ''
  };

  async onLoad(e) {
    this.$apply();
  }

  async getQueryFilter(e) {
    const space_id = e.space_id;
    const options = {
      $orderby: 'sort_no',
      $filter: `space eq '${space_id}'`,
      $count: true,
      $select: 'name,sort_no'
    };
    const result = await this.$parent.query(
      'vip_product_category',
      options,
      space_id
    );
    if (result && result.value && result.value[0]) {
      this.seleted_id = result.value[0]._id;
      this.categories = result.value;
      this.filter = `(categories eq '${this.seleted_id}')`;
    }
    this.$apply();
    return this.filter;
  }

  components = {
    searchbar: searchbar,
    productGridList: productGridList
  };

  wxs = {
    util: util
  };

  mixins = [recordList];

  methods = {
    searchRecords(searchValue, evt) {
      this.searchRecords(searchValue, evt);
    },
    async changeCategory(category_id) {
      this.seleted_id = category_id;
      this.filter = `(categories eq '${category_id}')`;
      await this.dataRefresh();
      this.$apply();
      // console.log('[changeCategory]', category_id)
    },
    checkout() {
      wepy.navigateTo({ url: `/pages/cart/index?space_id=${this.space_id}` });
    },
    viewOrder() {
      const user = this.$parent.globalData.user._id
      wepy.navigateTo({ url: `/pages/order/list?space_id=${this.space_id}&object_name=vip_order&allow_create=false&filter=(owner eq '${user}')&url=/pages/cart/checkout` })
    }
  };

  computed = {
    getProductCount() {
      const cartList = this.cartList;
      console.log('getProductCount....', cartList)
      let cartProductCount = 0;
      if (cartList && cartList.constructor === Array) {
        cartList.forEach(p => {
          if (p.space == this.space_id) {
            cartProductCount += p.count
          }
        });
      }
      return cartProductCount
    },
  };
}
</script>
