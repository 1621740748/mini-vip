<style lang="less">
  @import '../../wemark/wemark.wxss';
	.container {
    box-sizing: border-box;
    background-color: #f4f4f4;
    font-family: PingFangSC-Light,helvetica,'Heiti SC';
  }

  view,text{
    font-family: PingFangSC-Light,helvetica,'Heiti SC';
    font-size: 29rpx;
    color: #333;
  }
  .page {
    margin-bottom: 200rpx;
    position: relative;
  }
  .goodsimgs{
    width: 750rpx;
    height: 750rpx;
  }

  .goodsimgs image{
    width: 750rpx;
    height: 750rpx;
  }
  .service-policy{
    width: auto;
    height: 73rpx;
    background: #f4f4f4;
    padding: 0 31.25rpx;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
  }

  .service-policy .item{
    background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/servicePolicyRed-518d32d74b.png) 0 center no-repeat;
    background-size: 10rpx;
    padding-left: 15rpx;
    display: flex;
    align-items: center;
    font-size: 25rpx;
    color: #666;
  }

  .goods-info{
    width: auto;
    overflow: hidden;
    background: #fff;
  }

  .goods-info .c{
    display: block;
    width: auto;
    margin-left: 31.25rpx;
    padding: 38rpx 31.25rpx 0 0;
  }

  .goods-info .c text{
    display: block;
    width: 687.5rpx;
  }


  .goods-info .name{
    font-weight:bold;
    margin-bottom: 20rpx;
    font-size: 45rpx;
    line-height: 52rpx;
    max-height:100rpx;
    overflow:hidden;
    text-overflow:ellipsis;
    display: -webkit-box!important;
    -webkit-line-clamp:2;
    -webkit-box-orient:vertical;
  }

  .goods-info .desc{
    margin-left: 38rpx;
    margin-top: 5px;
    margin-bottom: 10px;
    font-size: 24rpx;
    line-height: 36rpx;
    color: #999;
  }


  .goods-info .price{
    font-weight: bold;
    display:inline!important;
    font-size: 40rpx;
    line-height: 35rpx;
    color: #b4282d;
  }

  .goods-info .brand{
    margin-top: 23rpx;
    min-height: 40rpx;
    text-align: center;
  }

  .goods-info .brand text{
    display: inline-block;
    width: auto;
    padding: 4rpx 30rpx 4rpx 10.5rpx;
    line-height: 35.5rpx;
    border: 1px solid #f48f18;
    font-size: 25rpx;
    color: #f48f18;
    border-radius: 8rpx;
    background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/detailTagArrow-18bee52dab.png) 95% center no-repeat;
    background-size: 10.75rpx 18.75rpx;
  }

  .section-nav{
    width: 750rpx;
    height: 108rpx;
    background: #fff;
    margin-bottom: 20rpx;
  }

  .section-nav .t{
    float: left;
    width: 600rpx;
    height: 108rpx;
    line-height: 108rpx;
    font-size: 29rpx;
    color: #333;
    margin-left: 31.25rpx;
  }

  .section-nav .i{
    float: right;
    width: 52rpx;
    height: 52rpx;
    margin-right: 16rpx;
    margin-top: 28rpx;
  }

  .section-act .t{
    float: left;
    display: flex;
    align-items: center;
    width: 600rpx;
    height: 108rpx;
    overflow: hidden;
    line-height: 108rpx;
    font-size: 29rpx;
    color: #999;
    margin-left: 31.25rpx;
  }

  .section-act .label{
    color: #999;
  }

  .section-act .tag{
    display: flex;
    align-items: center;
    padding:0 10rpx;
    border-radius: 3px;
    height: 37rpx;
    width: auto;
    color: #f48f18;
    overflow: hidden;
    border: 1px solid #f48f18;
    font-size: 25rpx;
    margin:0 10rpx;
  }

  .section-act .text{
    display: flex;
    align-items: center;
    height: 37rpx;
    width: auto;
    overflow: hidden;
    color: #f48f18;
    font-size: 29rpx;
  }

  .comments{
    width: 100%;
    height: auto;
    padding-left:30rpx;
    background: #fff;
    margin: 20rpx 0;
  }

  .comments .h{
    height: 102.5rpx;
    line-height: 100.5rpx;
    width: 718.75rpx;
    padding-right: 16rpx;
    border-bottom: 1px solid #d9d9d9;
  }

  .comments .h .t{
    display: block;
    float: left;
    width: 50%;
    font-size: 38.5rpx;
    color: #333;
  }

  .comments .h .i{
    display: block;
    float: right;
    width: 164rpx;
    height: 100.5rpx;
    line-height: 100.5rpx;
    background: url(http://nos.netease.com/mailpub/hxm/yanxuan-wap/p/20150730/style/img/icon-normal/address-right-990628faa7.png) right center no-repeat;
    background-size: 52rpx;
  }

  .comments .b{
    height: auto;
    width: 720rpx;
  }

  .comments .item{
    height: auto;
    width: 720rpx;
    overflow: hidden;
  }

  .comments .info{
    height: 127rpx;
    width: 100%;
    padding: 33rpx 0 27rpx 0;
  }

  .comments .user{
    float: left;
    width: auto;
    height: 67rpx;
    line-height: 67rpx;
    font-size: 0;
  }

  .comments .user image{
    float: left;
    width: 67rpx;
    height: 67rpx;
    margin-right: 17rpx;
    border-radius: 50%;
  }

  .comments .user text{
    display: inline-block;
    width: auto;
    height: 66rpx;
    overflow: hidden;
    font-size: 29rpx;
    line-height: 66rpx;
  }

  .comments .time{
    display: block;
    float: right;
    width: auto;
    height: 67rpx;
    line-height: 67rpx;
    color: #7f7f7f;
    font-size: 25rpx;
    margin-right: 30rpx;
  }

  .comments .content{
    width: 720rpx;
    padding-right: 30rpx;
    line-height: 45.8rpx;
    font-size: 29rpx;
    margin-bottom: 24rpx;
  }

  .comments .imgs{
    width: 720rpx;
    height: auto;
    margin-bottom: 25rpx;
  }

  .comments .imgs .img{
    height: 150rpx;
    width: 150rpx;
    margin-right: 28rpx;
  }


  .comments .spec{
    width: 720rpx;
    padding-right: 30rpx;
    line-height: 30rpx;
    font-size: 24rpx;
    color: #999;
    margin-bottom: 30rpx;
  }


  .goods-attr{
    width: auto;
    height: auto;
    overflow: hidden;
    padding: 0 31.25rpx 0rpx 31.25rpx;
    background: #fff;
  }

  .goods-attr .t{
    width: auto;
    height: 104rpx;
    line-height: 104rpx;
    font-size: 29rpx;
  }

  .goods-attr .item{
    width: 687.5rpx;
    height: 68rpx;
    padding: 11rpx 20rpx;
    margin-bottom: 11rpx;
    background: #f7f7f7;
    font-size: 38.5rpx;
  }

  .goods-attr .left{
    float: left;
    font-size: 25rpx;
    width: 134rpx;
    height: 45rpx;
    line-height: 45rpx;
    overflow: hidden;
    color: #999;
  }

  .goods-attr .right{
    float: left;
    font-size: 36.5rpx;
    margin-left: 20rpx;
    width: 480rpx;
    height: 45rpx;
    line-height: 45rpx;
    overflow: hidden;
    color: #333;
  }

  .detail{
    background-color: #fff;
    width: auto;
    height: auto;
    overflow: hidden;
  }

  .detail image{
    width: auto;
    display: block;
  }


  .common-problem{
    width: auto;
    height: auto;
    overflow: hidden;
  }

  .common-problem .h{
    position: relative;
    height: 145.5rpx;
    width: auto;
    padding: 56.25rpx 0;
    background: #fff;
    text-align: center;
  }

  .common-problem .h .line{
    display: inline-block;
    position: absolute;
    top: 72rpx;
    left: 0;
    z-index: 2;
    height: 1px;
    margin-left: 225rpx;
    width: 300rpx;
    background: #ccc;
  }

  .common-problem .h .title{
    display: inline-block;
    position: absolute;
    top: 56.125rpx;
    left: 0;
    z-index: 3;
    height: 33rpx;
    margin-left: 285rpx;
    width: 180rpx;
    background: #fff;
  }

  .common-problem .b{
    width: 750rpx;
    height: auto;
    overflow: hidden;
    padding: 0rpx 30rpx;
    background: #fff;

  }

  .common-problem .item{
    height: auto;
    overflow: hidden;
    padding-bottom: 25rpx;
  }

  .common-problem .question-box .spot{
    float: left;
    display: block;
    height: 8rpx;
    width: 8rpx;
    background: #b4282d;
    border-radius: 50%;
    margin-top: 11rpx;
  }

  .common-problem .question-box .question{
    float: left;
    line-height: 30rpx;
    padding-left: 8rpx;
    display: block;
    font-size: 26rpx;
    padding-bottom: 15rpx;
    color: #303030;
  }

  .common-problem .answer{
    line-height: 36rpx;
    padding-left: 16rpx;
    font-size: 26rpx;
    color: #787878;
  }


  .related-goods{
    width: 750rpx;
    height: auto;
    overflow: hidden;
  }

  .related-goods .h{
    position: relative;
    height: 145.5rpx;
    width: 750rpx;
    padding: 56.25rpx 0;
    background: #fff;
    text-align: center;
    border-bottom: 1px solid #f4f4f4;
  }

  .related-goods .h .line{
    display: inline-block;
    position: absolute;
    top: 72rpx;
    left: 0;
    z-index: 2;
    height: 1px;
    margin-left: 225rpx;
    width: 300rpx;
    background: #ccc;
  }

  .related-goods .h .title{
    display: inline-block;
    position: absolute;
    top: 56.125rpx;
    left: 0;
    z-index: 3;
    height: 33rpx;
    margin-left: 285rpx;
    width: 180rpx;
    background: #fff;
  }

  .related-goods .b{
    width: 750rpx;
    height: auto;
    overflow: hidden;
  }

  .related-goods .b .item{
    float: left;
    background: #fff;
    width: 375rpx;
    height: auto;
    overflow: hidden;
    text-align: center;
    padding: 15rpx 31.25rpx;
    border-right: 1px solid #f4f4f4;
    border-bottom: 1px solid #f4f4f4;
  }

  .related-goods .item .img{
    width: 311.45rpx;
    height: 311.45rpx;
  }

  .related-goods .item .name{
    display: block;
    width: 311.45rpx;
    height: 35rpx;
    margin: 11.5rpx 0 15rpx 0;
    text-align: center;
    overflow: hidden;
    font-size: 30rpx;
    color: #333;
  }

  .related-goods .item .price{
    display: block;
    width: 311.45rpx;
    height: 30rpx;
    text-align: center;
    font-size: 30rpx;
    color: #b4282d;
  }

  .bottom-btn{
    
    position: fixed;
    left:0;
    bottom:0;
    z-index: 100;
    width: 100%;
    height: 100rpx;
    display: flex;
    background: #fff;
  }

  .bottom-btn .l{
    float: left;
    height: 100rpx;
    width: 162rpx;
    border: 1px solid #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;

  }

  .bottom-btn .l.l-collect{
    border-right: none;
    border-left: none;
    text-align: center;
  }


  .bottom-btn .l.l-cart .box{
    position: relative;
    height: 60rpx;
    width: 60rpx;
  }

  .bottom-btn .l.l-cart .cart-count{
    height: 28rpx;
    width: 28rpx;
    z-index: 10;
    position: absolute;
    top: 0;
    right:0;
    background: #b4282d;
    text-align: center;
    font-size: 18rpx;
    color: #fff;
    line-height: 28rpx;
    border-radius: 50%;

  }

  .bottom-btn .l.l-cart .icon{

    position: absolute;
    top: 10rpx;
    left:0;

  }


  .bottom-btn .l .icon{
    display: block;
    height: 46rpx;
    width: 46rpx;
  }


  .bottom-btn .c{
    font-size: 36rpx;
    font-weight: bold;
    float: left;
    height: 100rpx;
    line-height: 96rpx;
    flex: 1;
    text-align: center;
    color: #333;
    border-top: 1px solid #f4f4f4;
    border-bottom: 1px solid #f4f4f4;
  }

  .bottom-btn .r{
    font-size: 36rpx;
    font-weight: bold;
    border:1px solid #b4282d;
    background: #b4282d;
    float: left;
    height: 100rpx;
    line-height: 96rpx;
    flex: 1;
    text-align: center;
    color: #fff;
  }

  .pop-mask {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(16, 16, 16, 0.6);
  }

  .attr-pop {
    position: fixed;
    transform: translateY(101%);
    bottom: 100rpx;
    left: 0;
    width: 100%;
    height: auto;
    padding: 31.25rpx;
    background: #fff;
    z-index:100;
    transition: all .3s linear;
    box-sizing: border-box;
    &.show {
      transform: translateY(0);
    }

    .img-info {
      width: 100%;
      height: 177rpx;
      overflow: hidden;
      margin-bottom: 41.5rpx;
    }

    .close {
      float: right;
      padding:0 0 40rpx 40rpx;
      .vip_close {
        width: 30rpx;
        height: 30rpx;
      }
    }

    .img {
      float: left;
      height: 177rpx;
      width: 177rpx;
      background: #f4f4f4;
      margin-right: 31.25rpx;
    }

    .info {
      float: left;
      height: 177rpx;
      display: flex;
      align-items: center;
    }

    .p{
      font-size: 33rpx;
      color: #333;
      height: 33rpx;
      line-height: 33rpx;
      margin-bottom: 10rpx;
    }

    .a{
      font-size: 29rpx;
      color: #333;
      height: 40rpx;
      line-height: 40rpx;
    }
  }

  .spec-con{
    width: 100%;
    height: auto;
    overflow: hidden;
  }

  .spec-con .name{
    margin-bottom: 22rpx;
    font-size: 29rpx;
    color: #333;
  }

  .spec-con .values{
    height: auto;
    margin-bottom: 31.25rpx;
    font-size: 0;
  }

  .spec-con .value{
    display: inline-block;
    height: 62rpx;
    padding: 0 35rpx;
    line-height: 56rpx;
    text-align: center;
    margin-right: 25rpx;
    margin-bottom: 16.5rpx;
    border: 1px solid #333;
    font-size: 25rpx;
    color: #333;
  }

  .spec-con .value.disable{
    border: 1px solid #ccc;
    color: #ccc;
  }

  .spec-con .value.selected{
    border: 1px solid #b4282d;
    color: #b4282d;
  }

  .selnum{
    width: 235rpx;
    height: 57rpx;
    // border: 1rpx solid #686868;
    display: flex;
    padding-bottom: 16rpx;
		
		view, input {
			display:flex;
			justify-content:center;
			align-items:center;
		}
  }

  .selnum .cut{
    width: 70rpx;
    height: 100%;
		text-align: center;
		height: 55rpx;
		line-height: 55rpx;
		border: 1rpx solid #686868;

		&.disabled {
			border-color: #aaa;
			border-right-color: #686868;
		}
  }

  .selnum .number{
    flex: 1;
    height: 100%;
		text-align: center;
    height: 55rpx;
    min-height: 55rpx;
    line-height: 55rpx;
    border-top: 1rpx solid #686868;
    border-bottom: 1rpx solid #686868;
    float: left;
  }

  .selnum .add{
    width: 80rpx;
    height: 100%;
		text-align: center;
		height: 55rpx;
		line-height: 55rpx;
		border: 1rpx solid #686868;
  }
  .cost_price {
    padding-left:16rpx;
    display:inline;
    color: #9b9b9b;
    font-size: 24rpx;
    text-decoration: line-through;
    overflow:hidden;
  }
  .flex-images-box{
    margin:0px -30rpx;
  }
  .weui-article{
    padding:0 30rpx 40rpx 30rpx;
  }
  .weui-article__c{
    padding:0 30rpx;
  }
  .page_body{
    padding-bottom:100rpx;
  }
  .button-hover{
    background-color:#e05c60!important;
  }
  .btn-share{
    display:inline!important;
    float:right;
    background:#ff9800;
    padding:4rpx 22rpx;
    margin-top:-10rpx;
    color:#fff!important;
    border-bottom-left-radius:12px;
    border-top-left-radius:12px;
    margin-right:-32rpx;
    text{
      display:inline!important;
      color:#fff;
    }

  }
</style>
<template>
  <view class="page">
    <view class="page_body">
      <swiper class="goodsimgs" indicator-dots="true" autoplay="true" interval="3000" duration="1000">
        <repeat for="{{product.covers}}" key="index" index="index" item="img">
          <swiper-item>
            <image src="{{util.formatImageUrl(img, baseUrl)}}" mode="aspectFill"></image>
          </swiper-item>
        </repeat>
      </swiper>
      <view class="service-policy">
        <view class="item">30天无忧退货</view>
        <view class="item">48小时快速退款</view>
        <view class="item">满88元免邮费</view>
      </view>
      <view class="goods-info">
        <view class="c">
          <text class="name">{{product.name}}</text>
          <!-- <text class="page__desc">{{product.description}}</text> -->
          <text class="price">￥{{product.default_price}}</text>
          <view class="cost_price" wx:if="{{product.compared_price && product.compared_price!=product.default_price}}">￥{{product.compared_price}}</view>
          <navigator class="btn-share" url="share?product_id={{product._id}}&space_id={{space_id}}&product_name={{product.name}}">
            <text>分享有礼</text>
          </navigator>
          <view class="brand" wx:if="{{brand.name}}">
            <navigator url="../brandDetail/brandDetail?id={{brand.brandId}}">
              <text>{{brand.name}}</text>
            </navigator>
          </view>
        </view>
      </view>
      <!-- <view class="section-nav section-attr" bindtap="switchAttrPop">
        <view class="t">请选择规格数量</view>
        <image class="i" src="../../static/images/address_right.png" background-size="cover"></image>
      </view> -->
      <view class="comments" wx:if="{{comment.count > 0}}">
        <view class="h">
          <navigator url="../comment/comment?valueId={{goods.id}}&typeId=0">
            <text class="t">评价({{comment.count > 999 ? '999+' : comment.count}})</text>
            <text class="i">查看全部</text>
          </navigator>
        </view>
        <view class="b">
          <view class="item">
            <view class="info">
              <view class="user">
                <image src="{{comment.data.avatar}}"></image>
                <text>{{comment.data.nickname}}</text>
              </view>
              <view class="time">{{comment.data.add_time}}</view>
            </view>
            <view class="content">
              {{comment.data.content}}
            </view>
            <view class="imgs" wx:if="{{comment.data.pic_list.length > 0}}">
              <image class="img"  wx:for="{{comment.data.pic_list}}" wx:key="{{item.id}}" src="{{item.pic_url}}"></image>
            </view>
          </view>
        </view>
      </view>
      <!-- <view class="goods-attr">
        <view class="l">
          <view class="item" wx:for="{{attribute}}" wx:key="{{item.name}}">
            <text class="left">{{item.name}}</text>
            <text class="right">{{item.value}}</text>
          </view>
        </view>
      </view> -->

      <view class="detail">
        <!-- <import src="../../wemark/wemark.wxml"/>
        <template class="desc" is="wemark" data="{{...wemark}}"></template>
        <repeat for="{{product.images}}" key="index" index="index" item="img">
          <image src="{{util.formatImageUrl(img, baseUrl)}}" mode="widthFix"></image>
        </repeat> -->

        <view class="weui-article body_color">
          <view class="weui-article__section article-section">
            <view class="weui-article__p article-p">
              <import src="../../wemark/wemark.wxml"/>
              <template class="desc" is="wemark" data="{{...wemark}}"></template>
            </view>
            <view class="weui-article__c" wx:if="{{withoutMarkdownImages && withoutMarkdownImages.length>1}}">
              <view class="flex-images-box">
                <repeat for="{{withoutMarkdownImages}}" key="index" index="index" item="item">
                  <image src="{{util.formatImageUrl(item, baseUrl)}}" mode="widthFix" @tap="previewImage({{item}})" class="flex-image {{(index + 1)%3 > 0 ? 'flex-image-item' : 'flex-image-last'}}"/>
                </repeat>
              </view>
            </view>
          </view>
        </view>
      </view>


      <view class="common-problem">
        <!-- <view class="h">
          <view class="line"></view>
          <text class="title">常见问题</text>
        </view> -->
        <view class="b">
          <view class="item" wx:for="{{issueList}}" wx:key="{{item.id}}">
            <view class="question-box">
              <text class="spot"></text>
              <text class="question">{{item.question}}</text>
            </view>
            <view class="answer">
              {{item.answer}}
            </view>
          </view>
        </view>
      </view>

      <view class="related-goods" wx:if="{{relatedGoods.length > 0}}">
        <view class="h">
          <view class="line"></view>
          <text class="title">大家都在看</text>
        </view>
        <view class="b">
          <view class="item" wx:for="{{relatedGoods}}" wx:key="{{item.id}}">
            <navigator url="/pages/goods/index?id={{item.id}}">
              <image class="img" src="{{item.list_pic_url}}" background-size="cover"></image>
              <text class="name">{{item.name}}</text>
              <text class="price">￥{{item.retail_price}}</text>
            </navigator>
          </view>
        </view>
      </view>

    </view>

    <view class="pop-mask" wx:if="{{showPop}}" @tap="closePop"></view>
    <view class="attr-pop {{showPop ? 'show' : ''}}">
      <view class="img-info">
        <image class="img" src="{{util.formatImageUrl(product.avatar, baseUrl)}}"></image>
        <view class="info">
          <view class="c">
            <view class="p">价格：￥{{product.default_price}}</view>
          </view>
        </view>
        <view class="close" @tap="closePop">
          <view class="vip_close"></view>
        </view>
      </view>
      <view class="spec-con">
        <view class="spec-item" wx:for="{{specificationList}}" wx:key="{{item.specification_id}}">
          <view class="name">{{item.name}}</view>
          <view class="values">
            <view class="value {{vitem.checked ? 'selected' : ''}}" bindtap="clickSkuValue" wx:for="{{item.valueList}}" wx:for-item="vitem" wx:key="{{vitem.id}}" data-value-id="{{vitem.id}}" data-name-id="{{vitem.specification_id}}">{{vitem.value}}</view>
          </view>
        </view>

        <view class="number-item">
          <view class="name">数量</view>
          <view class="selnum">
            <view class="cut {{count > 1 ? 'enabled' : 'disabled'}}" @tap="cutNumber">-</view>
            <input value="{{count}}" class="number" disabled="true" type="number" />
            <view class="add" @tap="addNumber">+</view>
          </view>
        </view>
      </view>
    </view>
    <view class="bottom-btn">
      <view class="l l-collect" hover-class='weui-grid_active' @tap="enterProductIndex">
        <image class="icon" src="{{ collectBackImage }}"></image>
      </view>
      <view class="l l-cart" @tap="openCartPage" hover-class='weui-grid_active'>
        <view class="box">
          <text class="cart-count">{{getProductCount}}</text>
          <image class="icon" src="/static/images/ic_menu_shoping_nor.png"></image>

        </view>
      </view>
      <view class="c" @tap="buyNow" hover-class='weui-grid_active'>立即购买</view>
      <view class="r" @tap="addProduct" hover-class='button-hover'>加入购物车</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { baseUrl } from '@/config'
  import util from '../../wxs/util.wxs'
  import wemark from '../../wemark/wemark'
  import { connect, getStore } from 'wepy-redux'
  import { ADD_PRODUCT } from '../../store/types/counter'
 
  const store = getStore()

  console.log(store)

  @connect({
    cartList(state) {
      return state.counter.cartList;
    }
  })

  export default class ProductView extends wepy.page {
		config = {
			navigationBarTitleText: '商品详情',
			enablePullDownRefresh: true
    };

    wxs = {
      util: util
    }

    data = {
      baseUrl: baseUrl,
      product: null,
      space_id: null,
      showPop: false,
      baseUrl: baseUrl,
      count: 1,
      noCollectImage: '/static/images/icon_collect.png',
      hasCollectImage: '/static/images/icon_collect_checked.png',
      collectBackImage: '/static/images/ic_menu_choice_nor.png',
      wemark: {},
      share_id: null,
      product_id: null
    }

    async onLoad (e) {
      console.log('===============onLoad======product===========', e)
      this.product_id = e.product_id;
      this.space_id = e.space_id;
      this.share_id = e.share_id;
      const options = {
        $filter: `_id eq '${this.product_id}'`,
        $select: 'name,default_price,compared_price,description,covers,images,avatar,categories,tags,vendor,status,space'
      };
      const product = await this.$parent.query('vip_product', options, 'guest');
      this.product = product.value[0];

      let productMd = this.product && this.product.description;
      //支持标准的图片markdown，格式为："![图片描述](http://192.168.0.195:5000/api/files/images/s8589uhysxKk7CEnp)";
      //如果传入imagePathPrefix，则可以进一步支持"![图片描述](s8589uhysxKk7CEnp)"
      if(productMd){
        wemark.parse(productMd, this, {
          name: 'wemark',
          imagePathPrefix: `${baseUrl}/api/files/images/`
        });
      }
      this.$apply();
    }

    async respondShare() {
      let userId = this.$parent.globalData.user._id;
      let name = this.$parent.globalData.user.name;
      const query_options = {
        $filter: `share eq '${this.share_id}' and owner eq '${userId}'`,
        $select: 'name'
      };
      let share_response = await this.$parent.query("vip_share_response", query_options, this.space_id);
      let values = {
        name: name,
        share: this.share_id
      };
      if(share_response && share_response.value && share_response.value.length){
        // 如果已经响应过，则需要修改其modified，以保证最后进来的能按modefied排序到最后一个
        share_response = await this.$parent.update("vip_share_response", share_response.value[0]._id, values, this.space_id);
      }
      else{
        share_response = await this.$parent.insert("vip_share_response", values, this.space_id);
      }
      if(!share_response){
        wx.showToast({
          title: "响应分享失败，请关闭后再重新打开",
          icon: "none"
        });
      }
    }

    computed = {
      getProductCount() {
        const cartList = this.cartList;
        console.log('getProductCount....', cartList)
        let cartProductCount = 0;
        if (cartList && cartList.constructor === Array) {
          cartList.forEach(p => {
            cartProductCount += p.count
          });
        }
        return cartProductCount
      },
      withoutMarkdownImages () {
        // 从this.post.images中排除this.post.description的markdown语法中已有的图片
        if(!this.product){
          return []
        }
        let md = this.product.description;
        if(md && md.length){
          let mdImages = md.match(/\!\[.*?\]\((.+?)\)/gm);//找出所有格式为![...](...)的图片字符串
          if(mdImages && mdImages.length){
            let strMdImages = mdImages.join(",");
            console.log("withoutMarkdownImages============================", strMdImages);
            return this.product.images.filter((n)=>{
              let tempReg = new RegExp(`\(.*?${n}.*?\)`);//匹配图片markdown字符串中的括号里面是否包含字符n
              return !tempReg.test(strMdImages);
            })
          }
          else{
            return this.product.images;
          }
        }
        else{
          return this.product.images;
        }
      }
    }

    // 分享
    onShareAppMessage(res) {
      return {
        title: this.product.name,
        path: `pages/product/view?space_id=${this.space_id}&product_id=${this.product_id}`
      };
    }

    methods = {
      previewImage(image, event){
        var baseUrl = this.baseUrl;
        var current = `${baseUrl}/api/files/images/${image}`;
        var urls = this.product.images.map((n)=>{
          return  `${baseUrl}/api/files/images/${n}`;
        });
        wx.previewImage({
          current: current,
          urls: urls
        });
      },
      addProduct() {
        const _id = this.product._id
        if (_id) {
          store.dispatch({type: 'ADD_PRODUCT', payload: {_id: _id, count: 1}})
        }
      },
      openCartPage() {
        wx.navigateTo({
          url: '../cart/index'
        })
      },
      enterProductIndex() {
        const space_id = this.space_id;
        wx.navigateTo({
          url: `./list?space_id=${space_id}`
        })
      },
      buyNow() {
        if (this.showPop) {
          let product = this.product;
          product.count = this.count;
          product = JSON.stringify(product);
          wx.navigateTo({
            url: `../cart/checkout?product=${product}`
          })
        } else {
          this.showPop = true;
          this.$apply();
        }
      },
      closePop() {
        this.showPop = false;
        this.$apply();
      },
        cutNumber: function () {
        this.count = (this.count - 1 > 1) ? this.count - 1 : 1
      },
      addNumber: function () {
        this.count ++
      }
    }
    // methods = {
    //   switchAttrPop: function () {
    //     if (this.openAttr === false) {
    //       this.openAttr = !this.openAttr
    //       this.collectBackImage = '/static/images/detail_back.png'
    //     }
    //   },
    //   closeAttrOrCollect: async function () {
    //     if (this.openAttr) {
    //       this.openAttr = false
    //       if (this.userHasCollect === 1) {
    //         this.collectBackImage = this.hasCollectImage
    //       } else {
    //         this.collectBackImage = this.noCollectImage
    //       }
    //     } else {
    //       // 添加或是取消收藏
    //       let res = await util.request(api.CollectAddOrDelete, { typeId: 0, valueId: this.id }, 'POST')
    //       if (res.errno === 0) {
    //         if (res.data.type === 'add') {
    //           this.collectBackImage = this.hasCollectImage
    //         } else {
    //           this.collectBackImage = this.noCollectImage
    //         }
    //       } else {
    //         wepy.showToast({
    //           image: '/static/images/icon_error.png',
    //           title: res.errmsg,
    //           mask: true
    //         })
    //       }
    //     }
    //   },
    //   openCartPage: function () {
    //     wepy.switchTab({
    //       url: '/pages/cart'
    //     })
    //   },
    //   addToCart: async function () {
    //     if (this.openAttr === false) {
    //       // 打开规格选择窗口
    //       this.openAttr = !this.openAttr
    //       this.collectBackImage = '/static/images/detail_back.png'
    //     } else {
    //     // 提示选择完整规格
    //       if (!this.isCheckedAllSpec()) {
    //         return false
    //       }

    //       // 根据选中的规格，判断是否有对应的sku信息
    //       let checkedProduct = this.getCheckedProductItem(this.getCheckedSpecKey())
    //       if (!checkedProduct || checkedProduct.length <= 0) {
    //         // 找不到对应的product信息，提示没有库存
    //         return false
    //       }

    //       // 验证库存
    //       if (checkedProduct.goods_number < this.number) {
    //         // 找不到对应的product信息，提示没有库存
    //         return false
    //       }

    //       // 添加到购物车
    //       let res = await util.request(api.CartAdd, { goodsId: this.goods.id, number: this.number, productId: checkedProduct[0].id }, 'POST')
    //       if (res.errno === 0) {
    //         wepy.showToast({
    //           title: '添加成功'
    //         })
    //         this.openAttr = !this.openAttr
    //         this.cartGoodsCount = res.data.cartTotal.goodsCount
    //         if (this.userHasCollect === 1) {
    //           this.collectBackImage = this.hasCollectImage
    //         } else {
    //           this.collectBackImage = this.noCollectImage
    //         }
    //       } else {
    //         wepy.showToast({
    //           image: '/static/images/icon_error.png',
    //           title: res.errmsg,
    //           mask: true
    //         })
    //       }
    //     }
    //   },
    //   cutNumber: function () {
    //     this.number = (this.number - 1 > 1) ? this.number - 1 : 1
    //   },
    //   addNumber: function () {
    //     this.number ++
    //   }
    // }
    // async getGoodsInfo () {
    //   let res = await util.request(api.GoodsDetail, { id: this.id })
    //   if (res.errno === 0) {
    //     this.goods = res.data.info
    //     this.gallery = res.data.gallery
    //     this.attribute = res.data.attribute
    //     this.issueList = res.data.issue
    //     this.comment = res.data.comment
    //     this.brand = res.data.brand
    //     this.specificationList = res.data.specificationList
    //     this.productList = res.data.productList
    //     this.userHasCollect = res.data.userHasCollect
    //     this.$apply()
    //     if (res.data.userHasCollect === 1) {
    //       this.collectBackImage = this.hasCollectImage
    //     } else {
    //       this.collectBackImage = this.noCollectImage
    //     }

    //     WxParse.wxParse('goodsDetail', 'html', res.data.info.goods_desc, this)

    //     await this.getGoodsRelated()
    //   }
    // }
    // async getGoodsRelated () {
    //   let res = await util.request(api.GoodsRelated, { id: this.id })
    //   if (res.errno === 0) {
    //     this.relatedGoods = res.data.goodsList
    //     this.$apply()
    //   }
    // }
    // clickSkuValue (event) {
    //   let specNameId = event.currentTarget.dataset.nameId
    //   let specValueId = event.currentTarget.dataset.valueId

    // // 判断是否可以点击

    // // TODO 性能优化，可在wx:for中添加index，可以直接获取点击的属性名和属性值，不用循环
    //   let _specificationList = this.specificationList
    //   for (let i = 0; i < _specificationList.length; i++) {
    //     if (_specificationList[i].specification_id === specNameId) {
    //       for (let j = 0; j < _specificationList[i].valueList.length; j++) {
    //         if (_specificationList[i].valueList[j].id === specValueId) {
    //           // 如果已经选中，则反选
    //           if (_specificationList[i].valueList[j].checked) {
    //             _specificationList[i].valueList[j].checked = false
    //           } else {
    //             _specificationList[i].valueList[j].checked = true
    //           }
    //         } else {
    //           _specificationList[i].valueList[j].checked = false
    //         }
    //       }
    //     }
    //   }
    //   this.specificationList = _specificationList
    //   this.$apply()
    // // 重新计算spec改变后的信息
    //   this.changeSpecInfo()

    // // 重新计算哪些值不可以点击
    // }
    // // 获取选中的规格信息
    // getCheckedSpecValue () {
    //   let checkedValues = []
    //   let _specificationList = this.specificationList
    //   for (let i = 0; i < _specificationList.length; i++) {
    //     let _checkedObj = {
    //       nameId: _specificationList[i].specification_id,
    //       valueId: 0,
    //       valueText: ''
    //     }
    //     for (let j = 0; j < _specificationList[i].valueList.length; j++) {
    //       if (_specificationList[i].valueList[j].checked) {
    //         _checkedObj.valueId = _specificationList[i].valueList[j].id
    //         _checkedObj.valueText = _specificationList[i].valueList[j].value
    //       }
    //     }
    //     checkedValues.push(_checkedObj)
    //   }

    //   return checkedValues
    // }
    // // 根据已选的值，计算其它值的状态
    // setSpecValueStatus () {

    // }
    // // 判断规格是否选择完整
    // isCheckedAllSpec () {
    //   return !this.getCheckedSpecValue().some(function (v) {
    //     if (v.valueId === 0) {
    //       return true
    //     }
    //   })
    // }
    // getCheckedSpecKey () {
    //   let checkedValue = this.getCheckedSpecValue().map(function (v) {
    //     return v.valueId
    //   })

    //   return checkedValue.join('_')
    // }
    // changeSpecInfo () {
    //   let checkedNameValue = this.getCheckedSpecValue()

    // // 设置选择的信息
    //   let checkedValue = checkedNameValue.filter(function (v) {
    //     if (v.valueId !== 0) {
    //       return true
    //     } else {
    //       return false
    //     }
    //   }).map(function (v) {
    //     return v.valueText
    //   })
    //   if (checkedValue.length > 0) {
    //     this.checkedSpecText = checkedValue.join('　')
    //   } else {
    //     this.checkedSpecText = '请选择规格数量'
    //   }
    //   this.$apply()
    // }
    // getCheckedProductItem (key) {
    //   return this.productList.filter(function (v) {
    //     if (v.goods_specification_ids === key) {
    //       return true
    //     } else {
    //       return false
    //     }
    //   })
    // }
  }
</script>
